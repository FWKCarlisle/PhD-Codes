import matplotlib.pyplot as plt
import numpy as np


#Spatial data from 16/08/24
# distances_1 =  np.array([0,0,0.52,0.80,1.11,1.47,2.09,3.22])
# Contact_potential_1 = np.array([0.18,0.17,0.18,0.19,0.2,0.22,0.21,0.22])
# CP_errors_1 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_1 = np.array([0,0,0.01,0.01,0.01,0.01,0.01,0.01])

# distances_2 =  np.array([1.97,1.30,0.66,0,-0.68,-1.31,-1.98])
# Contact_potential_2 = np.array([0.2,0.2,0.21,0.2,0.2,0.19,0.19])
# CP_errors_2 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_2 = np.array([0.02,0.02,0.01,0,0.01,0.02,0.02])

# distances_3 =  np.array([2.03,1.37,0.74,0,-0.56,-1.17,-1.83])
# Contact_potential_3 = np.array([0.21,0.21,0.19,0.18,0.2,0.2,0.18])
# CP_errors_3 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_3 = np.array([0.01,0.01,0.01,0,0.01,0.01,0.01])
# number =                       [153 ,157 ,154 ,160 ,164 , 156 , 158 , 162]
# distances_4 =         np.array([0   ,0   ,0.94,1.89,2.82,-0.97,-1.91,-2.88])
# Contact_potential_4 = np.array([0.1 ,0.13,0.13,0.14,0.22, 0.13, 0.16, 0.22])
# cut_off_potenital_4 = np.array([0.07,0.3 ,0.09,0.05,0.19, 0.27, 0.17, 0.18])
# CP_errors_4 =         np.array([0.01,0.01,0.01,0.01,0.01,0.01, 0.01 ,  0.01])
# Cutoff_CP_errors_4 =  np.array([0.09,0.09,0.09,0.09,0.09,0.09, 0.09 ,  0.09])
# d_errors_4 = np.array([])

#Spatial data from 19/08/24
# number =                       [449,451,453,455,457,459,461,463,465,467,469]
# file_name =                    [268,270,272,274,276,278,280,282,284,286,288]
# distances_5 =         np.array([-1.04,-2.16,-3.34,-4.41,-5.59,1.16,2.39,3.44,4.45,3.44,5.64])
# d_errors_5 =          np.array([0.03,0.05,0.05,0.05,0.05,0.05,0.06,0.06,0.06,0.06])
# Contact_potential_5 = np.array([0.19 ,0.18,0.17  ,0.2  ,0.2  ,0.2  ,0.19 ,0.205  ,0.21,0.21])
# CP_errors_5 =         np.array([0.005,0.005,0.004,0.003,0.003,0.004,0.003,0.006,0.003,0.004])
# max_residual_5 =      np.array([0.1489,0.1155,0,0,0,0.1035,0,0,0.0795,0,0.1702])
# max_bias_5 =          np.array([0.28  ,0.47  ,0,0,0,0.435,0,0,0.62,0,0.37])


# number =                       [495,496,497,498,499,500,501,503,504,505,506,507]
# file_name =                    [314,315,316,317,318,319,320,322,323,324,325,326]
# distances_5 =         np.array([-0.34,-0.72,-1.07,-1.40,-1.77,-2.08,-2.441,0.33,0.71,1.03,1.38,1.73,2.08]) ### This is the data for slide 39 in scratch pad
# d_errors_5 =          np.array([0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06])
# max_bias_5 =          np.array([0.3120001, 0.36800009, 0.4320001, 0.51200002, 0.67200011, 0.76000005, 0, 0.31999999, 0.37599999, 0.45600003, 0.59200007, 0.6880001,0])

# number =                       [471,473,475,477,478, 479,481,483,485] #Number on image
# file_name =                    [289,290,292,294,296, 298,300,302,304] #File name
# distances_5 =         np.array([0, 1.20,2.29,3.40,4.08,-1.15,-2.24,-3.42,-4.57]) #Distance measured in nm
# d_errors_5 =          np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01]) #Error in distance
# max_bias_5 =          np.array([0.31499994, 0.48000002, 0.78999996, 0, 0.39499998,0, 0, 0]) #Well position
# #Well depth
# well_depths_5 =       np.array([0.13853357325280397, 0.14387903522809178, 0.12032916771994409, 0.10920208083530394, 0.07038546859238941, 0.1296870079292956, 0.04337245457452322, 0.05068743582084121, 0.055250692408798735])
# #'Rough depth error
# depth_errors_5 =      np.array([0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05])

#DATA for spatial 6 (?)               
# number =                       [517   , 518   , 519   , 520   , 521   , 522   , 523   , 524   , 525   , 526   , 527   , 528   , 529   , 530   ] #Number on image
# file_name =                    [336   , 337   , 338   , 339   , 340   , 341   , 342   , 343   , 344   , 345   , 346   , 347   , 348   , 349   ] #File name 
# distances_5 =         np.array([0     , 0.44  , 0.93  , 1.85  , 1.39  , 2.33  , 2.79  ,-0.14  ,-0.55  ,-1.03  ,-1.48  ,-1.92  ,-2.40  ,-2.75  ]) #Distance measured in nm
# d_errors_5 =          np.array([0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.03  ]) #Error in distance
# max_bias_5 =          np.array([0.3360, 0.3573, 0.5333, 0.4107, 0.6507, 0.7467, 0.6453, 0.3307, 0.3413, 0.4320, 0.5333, 0.7360, 0.7253, 0.4427]) #Well position
# well_depths_5 =       np.array([0.1744, 0.1640, 0.0986, 0.1596, 0.1012, 0.0508, 0.0438, 0.1857, 0.1886, 0.1767, 0.1204, 0.1022, 0.0689, 0.0448]) #Well depth
# depth_errors_5 =      np.array([0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05]) #'Rough depth error

#Data for spatial 8
# number =                       [] #Number on image
# file_name =                    [390  , 391 , 392 , 393 , 394 , 395 , 396 , 397 , 398 , 399 ] #File name 
# distances_5 =         np.array([0    , 30  , 60  , 90  , 120 , 150 , 0   , -30 , -60 ,-90  ]) #Distance measured in nm
# d_errors_5 =          np.array([0.02 , 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]) #Error in distance
# LCPD_5 =          np.array([-0.14,-0.17,-0.18,-0.20,-0.16,-0.18,-0.18,-0.13,-0.15,-0.15]) #Well position
# max_bias_5 =          np.array([0.37666667, 0.40000004, 0.41666669, 0.41000003, 0.42666668, 0.44, 0.38, 0.37333333, 0.36666667, 0.32333338])
# well_depths_5 =       np.array([0.09 , 0.12   , 0.15, 0.16, 0.17, 0.15, 0.11, 0.06, 0.09, 0.08]) #Well depth
# FWHM_5 =              np.array([0.10 , 0.09   , 0.08, 0.08, 0.07, 0.06, 0.09, 0.09, 0.11, 0.15])#abs value of FWHM
# depth_errors_5 =      np.array([0.01 , 0.01, 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01]) #'Rough depth error
# FWHM_errors_5 =       np.array([0.01 , 0.01, 0.005, 0.005, 0.005, 0.005,0.005 , 0.01, 0.01, 0.01]) #'Rough depth error

#data for spatial 10 (dF/dZ)
# # LR
# number      =          [881   , 879  , 877  , 875  , 873  , 871  , 869  , 867  , 865  , 864  , 866 , 868 ,   870 , 872 , 874  , 876 , 878 , 880 , 882]
# file_number =          [ 225  , 223  , 221  , 219  , 217  , 215  , 213  , 211  , 209  , 208  , 210 , 212 ,   214 , 216 , 218  , 220 , 222 , 224 , 226]
# distances   = np.array([-2.43 , -2.15, -1.88, -1.62, -1.35, -1.07, -0.82, -0.55,-0.26 , 0    , 0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([1.800 ,0     , 0.182, 1.334,2.404 , 3.500, 4.182, 4.528, 4.658, 4.765,4.688, 4.476, 4.182,3.198, 2.255,1.401,1.401,1.835,4.551 ])
# dip_h_errs  = np.array([0.110 ,0     , 0.051, 0.009,0.023 , 0.018, 0.015, 0.012, 0.014, 0.015,0.013, 0.016, 0.037,0.048, 0.110,0.028,0.028,0.124,0.040])
# dip_width   = np.array([4.352 ,0     , 2.478, 2.060,2.735 , 2.667, 2.559, 2.213, 2.362, 2.274,2.064, 2.366, 3.464,4.849, 5.417,3.045,3.045,6.238,3.731])
# dip_w_errs  = np.array([0.502 ,0     , 0.096, 0.026,0.072 , 0.059, 0.049, 0.035, 0.043, 0.046,0.036, 0.049, 0.134,0.263, 0.472,0.115,0.115,0.767,0.170])
# dip_position= np.array([0.069 ,0     , 0.182, 0.186,0.148 , 0.145, 0.155, 0.179, 0.186, 0.192,0.198, 0.186, 0.138,0.128, 1.121,0.149,0.149,0.112,0.113])
# dip_p_errs  = np.array([0.001 ,0     , 0.096, 0.001,0.002 , 0.002, 0.002, 0.002, 0.002, 0.003,0.003, 0.002, 0.002,0.001, 0.002,0.002,0.002,0.002,0.002])
# peak_YN     = np.array([0     ,0     , 0.5  , 1    ,1     , 1    , 1    , 1    , 1    , 1    ,1    , 1    , 1    ,0.5  , 0    ,0.5  ,0    ,0    ,0])

# UD1
# number      =          [  860  ,857   ,859   ,   853,   851,   849,   847,   845,   843, 842  ,  844 ,  846,  848,  850,  852,  854,  856,  858, 861]
# file_number =          [  204  ,201   ,203   ,   197,   195,   193,   191,   189,   187, 186  ,  188 ,  190,  192,  194,  196,  198,  200,  202, 205]
# distances   = np.array([ -2.16 , -1.95, -1.73, -1.48, -1.24, -0.99, -0.75, -0.50,-0.25 ,  0   ,0.25  , 0.47, 0.74, 0.98, 1.24,1.48 , 1.72, 1.96, 2.18  ])
# d_errors    = np.array([ 0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0    , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([ 0     ,-0.637,1.259 ,1.214 ,2.894 ,3.775 ,4.277 , 4.486, 4.650, 4.773, 4.683,4.483,4.115,3.507,2.596,1.645,0.734,4.804,4.703])
# dip_h_errs  = np.array([0      , 0.604,0.012 ,0.305 ,0.024 ,0.020 ,0.013 ,0.013 , 0.019, 0.015, 0.015,0.017,0.017,0.014,0.014,0.011,0.019,0.097,0.032])
# dip_width   = np.array([0      , 5.573,2.204 ,5.534 ,3.184 ,3.404 ,2.386 ,2.342 , 2.611, 2.452,2.410 ,2.453,2.634,2.906,3.125,2.849,2.412,6.532,4.382])
# dip_w_errs  = np.array([0      , 1.067,0.039 ,0.572 ,0.096 ,0.088 ,0.039 ,0.041 , 0.063, 0.045,0.047 ,0.050,0.050,0.050,0.057,0.038,0.071,0.703,0.172])
# dip_position= np.array([0      , 0.141,0.159 ,0.161 ,0.140 ,0.151 ,0.167 ,0.184 , 0.182, 0.198,0.201 ,0.198,0.201,0.191,0.200,0.216,0.230,0.120,0.131])
# dip_p_errs  = np.array([0      ,0.011 ,0.002 ,0.005 ,0.002 ,0.002 ,0.002 ,0.002 , 0.002, 0.002,0.002 ,0.002,0.002,0.002,0.002,0.001,0.002,0.002,0.001])
# peak_YN     = np.array([0      ,0     ,1     ,0.5   ,1     ,1     ,1     , 1    ,1     , 1    , 1    ,  1  ,1    ,1,1,1,1,0,0])

# # UD2
# number      =          [903,901,899,896,893,891,889,887,885,884,886,888,890,892,894,897,900,902,904]
# file_number =          []
# distances   = np.array([-2.22,-1.97,-1.74,-1.48,-1.24,-0.98,-0.76,-0.50,-0.25,0,0.22,0.46,0.74,0.97,1.24,1.48,1.71,1.96,2.22])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0,0.01 , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 ])
# dip_height  = np.array([4.566,-0.470,1.020,1.843,2.692,3.625,4.166,4.510,4.711,4.707,4.702,4.461,4.226,3.850,2.736,2.736,1.239,1.239,0])
# dip_h_errs  = np.array([0.039,0.392,0.013 ,0.016,0.016,0.019,0.022,0.011,0.012,0.013,0.014,0.013,0.017,0.024,0.032,0.032,0.022,0.022,0])
# dip_width   = np.array([3.257,3.386,2.288 ,2.604,2.742,2.797,2.501,2.092,2.116,2.180,2.101,2.138,2.320,2.715,2.982,2.982,2.189,2.189,0])
# dip_w_errs  = np.array([0.148,0.554,0.041 ,0.052,0.056,0.065,0.062,0.031,0.033,0.037,0.038,0.037,0.047,0.077,0.115,0.115,0.065,0.065,0])
# dip_position= np.array([0.110,0.184,0.204 ,0.187,0.166,0.163,0.175,0.192,0.188,0.175,0.172,0.162,0.146,0.131,0.118,0.118,0.143,0.143,0])
# dip_p_errs  = np.array([0.002,0.019,0.002 ,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.003,0.003,0])
# peak_YN     = np.array([0.5  ,0    , 1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,0.5  ,0, 1, 0    ,0       ])

#Spatial 7 redo UD
# number      =          ["00017","00020","00023","00026","00029","00031","00034","00037","00040","00043"]
# file_number =          []
# distances   = np.array([0.31,0.60,0.96,1.31,1.64,-0.34,-0.68,-1.05,-1.34,-1.66])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01, 0.01])
# dip_height  = np.array([2.984719293799875    ,  2.7090332404029573  , 2.3379283447252934  , 1.2793321771382042  , -0.5361913646321042,2.5881167149627275, 1.9251626152505612, 1.2742114170563084, 0.0036061724441941753, 7.231125742332429 ])
# dip_h_errs  = np.array([0.01908215813853236  , 0.023774667452496536, 0.048620651219435276 , 0.02984144524768235 , 0.7124395176094928,0.03034680448683324, 0.03227107226587375, 0.01508986106946947, 0.1652037618912669, 0.09307432685572564  ])
# dip_width   = np.array([2.6789917574970987   , 2.727400606160183   , 3.2672854451956432   , 2.8753638547742586  , 4.927786132253248,2.8144345692661568, 3.6449941374008086, 2.6669224527710242, 2.9619547095413887, 6.623305173775462   ])
# dip_w_errs  = np.array([0.06556064857939363  ,  0.08294052796969931, 0.17499241728930787  , 0.12348195321646123 , 1.1295257327438075,0.10468062471514171, 0.14942337574251274, 0.051140056700897975, 0.3114988412139195, 0.7703704338683272  ])
# dip_position= np.array([0.19794068220168815  , 0.1953634628106038  , 0.17708699848588738  , 0.17965418015396428 , 0.16860419720911854,0.17692541122661418, 0.1733515282298399, 0.2070832398500242, 0.21385284232060778, 0.09338866185591052 ])
# dip_p_errs  = np.array([0.0026416568232354534, 0.003165080938321284, 0.0037288137137782267, 0.003207983433296061, 0.018870609180731485,0.0032979230271117602, 0.0024759510292146885, 0.0021024089131621466, 0.007087819315758293, 0.0013023792883066529])
# peak_YN     = np.array([1  ,1    , 1    ,1  ,0 ,1,1,1,0.5,0      ])
# LR
# number      =          ["00047","00048","00049","00051","00052","00053","00055","00056","00057","00061","00058"]
# file_number =          []
# distances   = np.array([0,-0.36,-0.70,-1.02,-1.34,-1.68,0.30,0.63,0.96,1.30,1.65])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([2.9373758436311768, 2.7057912095446337, 2.1648686594935382, 1.5799795381682271, 1.0768218702172783, 2.00715232437357,2.5573463958812352, 0.07153301811403592, 1.4560804448351463, 0.7103322018973444, 9.221776933713336])
# dip_h_errs  = np.array([0.017615233984627447, 0.023062072635248176, 0.06588780159865813, 0.013725344390681236, 0.021621913212727637, 0.2070251079779654,0.017592481913974233, 0.13861262025872254, 0.026760653326206908, 0.022987736608054768, 0.05714744006614024])
# dip_width   = np.array([2.2319554628291742, 2.4517429847625607, 3.7237662671846254, 2.7696502970799397, 2.372907244407054, 5.117143602060021,2.264444297974664, 2.56042918615209, 2.0436418507279313, 1.473511969437267, 3.147946694804171])
# dip_w_errs  = np.array([0.05159061952605696, 0.07238357932648615, 0.30501570563585445, 0.04615252199853928, 0.07437577189826948, 0.8117443893301912,0.05181290534093793, 0.2278767684589036, 0.07606201871515594, 0.060553335736474014, 0.19084569360418008])
# dip_position= np.array([0.16812550461743073, 0.14192736973847433, 0.1317601497047756, 0.21011971475996863, 0.24937346684392186, 0.12481633600669205,0.131108929461192, 0.08984889240054207, 0.0961777710913708, 0.09127799622201832, 0.08739783015718841])
# dip_p_errs  = np.array([0.0025596727170604247, 0.0025103031732244107, 0.003612768310084299, 0.0017797860517795242, 0.003966878982881559, 0.003072529042757686,0.0019358270409551572, 0.003285252335391619, 0.0025233154082250522, 0.002445625306343434, 0.0015523481997773306])
# peak_YN     = np.array([1,1,0.5,1,1,0,1,0,1,1,0])
#Spatial 7 with 9 as reference
# number      =          ["00017","00020","00023","00026","00029","00031","00034","00037","00040","00043"]
# file_number =          []
# distances   = np.array([0.31,0.60,0.96,1.31,1.64,-0.34,-0.68,-1.05,-1.34])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01])
# dip_height  = np.array([3.1347985456443954, 2.5824662650203867, 2.0504142084214574, 1.2094113151885684, 0.41800646074628506,2.465580739786351, 1.6149165345876508, 1.0727278137863971, 0.0604340784500073 ])
# dip_h_errs  = np.array([0.015389470452637973, 0.03501937112117988, 0.07083830587834906, 0.018857946738801465, 0.048245126452969044,0.022488223914513397, 0.036204993818203815, 0.012304974832226813, 0.0667904319702959 ])
# dip_width   = np.array([2.483274260395568, 2.9756358167042327, 3.8279846225815617, 2.8643988150948694, 2.536091026435784,2.507496921400756, 3.205666801339972, 2.011121690088524, 1.8680627494276087 ])
# dip_w_errs  = np.array([0.049617300569605234, 0.13248567615515686, 0.25335314538732945, 0.06919052383232398, 0.11938322906503036,0.07294880389272157, 0.13098879536125407, 0.04239788106328328, 0.10692489576360607 ])
# dip_position= np.array([0.17843987019837257, 0.16903635668958936, 0.16007279857567533, 0.19090366448058008, 0.21887857925739929,0.16554887798098633, 0.1341569523850735, 0.15363989184017848, 0.1759236679029067])
# dip_p_errs  = np.array([0.0021357782408394314, 0.0035644743513652895, 0.003107653696509375, 0.0021068131573919366, 0.002831205277504519,0.0028477491366145366, 0.0022340429427438455, 0.0017660993928601883, 0.004373271162182034])
# peak_YN     = np.array([1  ,1    , 1    ,1  ,0.5 ,1,1,1,0.5    ])

#spatial 9 LR
# number      =          ['00131', '00120', '00121', '00122', '00123', '00124', '00125', '00126', '00127', '00128', '00129', '00130']
# file_number =          []
# distances   = np.array([0,0.17,0.33,0.51,0.72,0.93,1.15,1.36,-0.4,-0.6,0.81,-1.02])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([3.4505516895986115, 3.094366950081634, 2.43873694762098, 1.5738449232629892, 2.1357634930953178, 1.7024289501051073, 1.0219800566243766, -0.16651190714534925, 5.107499980289588, 2.821042746286648, 2.64693631964561, 2.2843574410875345 ])
# dip_h_errs  = np.array([0.04607073779153889, 0.05531041708771819, 0.09541329512632943, 0.1614994957710647, 0.0348927721917759, 0.036837003088279134, 0.07429100959342883, 0.49549520651858564, 1.9290308329447794, 0.22655242285280824, 0.05677064434057204, 0.03498841687551297])
# dip_width   = np.array([2.00693027287548, 3.855266661527191, 3.8813948130311196, 5.219628323389658, 2.480809025436707, 2.915245089884851, 3.510654609883336, 5.115954255634156, 6.349443061760431, 4.028794441522657, 2.565028940565458, 2.1897229988026585])
# dip_w_errs  = np.array([0.10137134914146569, 0.3244309658975292, 0.3088312469301628, 1.0647286225039287, 0.10143640067239815, 0.14587427797306246, 0.2847739756741745, 0.8619809593441295, 3.0706950633020313, 0.9699552072236769, 0.19163157628519947, 0.12291304134655359])
# dip_position= np.array([0.1498494111227242, 0.16570226698009793, 0.18361750345617617, 0.17919148775601754, 0.19153011282080354, 0.20479680163433595, 0.19597762305824787, 0.20564207426520645, 0.1434572100987969, 0.1042093811767408, 0.09942386424300373, 0.09113782437328041])
# dip_p_errs  = np.array([0.002972763508225624, 0.0026289538479874145, 0.0023971597504080623, 0.003781356273039886, 0.002735854436098689, 0.0030242205998267067, 0.003235185852575449, 0.013925774307261884, 0.035145651327676046, 0.003996268868830938, 0.0026212167398817834, 0.0024269489818738825])
# peak_YN     = np.array([0,0.5,0.5,0.5,0.75,0.5,0.5,0,0,0,0,0])
# UD
# number      =          ["00119","000111","000112","000113","000114","000115","000116","000117","000118",]
# file_number =          []
# distances   = np.array([0,-0.05,-0.23,-0.44,-0.64,0.19,0.40,0.61,0.81])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([3.9181312403434374, 0.5857537455307277, 3.6087793308623297, 2.3498514159686503, 1.6388800377818973, 2.659617880343216, 1.6501063559834594, 0.3655477145533644, 1.053382975386362])
# dip_h_errs  = np.array([0.45411787771902357, 0.09541570515824435, 0.05582886748440826, 0.020231853234906762, 0.023031316246063787, 0.02052353859274217, 0.0355764239124517, 0.12133873522884243, 0.23735719155875198])
# dip_width   = np.array([5.738733901834097, 4.372204684749868, 2.8615185711784443, 1.8531087644502773, 1.916759287909072, 3.022629567302717, 3.2213509374708473, 3.3368244024370792, 6.915843094385059])
# dip_w_errs  = np.array([1.155557930665414, 0.5089486995413689, 0.16487107973736284, 0.06409625859826212, 0.06140778026999708, 0.10425937198015076, 0.1471698916008326, 0.3888557065606178, 2.797917474789448])
# dip_position= np.array([0.17643589378509364, 0.1916868568994748, 0.15674393208417856, 0.15512041902058699, 0.13314207084096277, 0.20941232857537098, 0.2550134330308294, 0.2609747024101144, 0.19309821655786577])
# dip_p_errs  = np.array([0.006292221152489713, 0.0022351124895514207, 0.0024825111181085366, 0.0031961953051190314, 0.0020706527950554257, 0.0021284876023936303, 0.002874369461042606, 0.004472194545701514, 0.0029180278953729972])
# peak_YN     = np.array([0,0,0.5,1,0,0.5,0.75,1,0])

# # Spatial 11 UD

# number      =          ["00287","00289","00291","00294","00296","00298","00300","00302","00284","00286","00288","00290","00293","00295","00297","00299","00301","00303"]
# file_number =          []
# distances   = np.array([-0.44  ,-0.68  ,-0.92  , -1.17 ,-1.42  ,-1.66  ,-1.89  ,-2.19  ,0      ,0.29,0.56,0.78,1.03,1.28,1.51,1.78,1.98,2.24])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([8.292267185560522, 4.209060705345331, 3.873151422792977, 3.15477439701132, 8.414709273125741, 8.475709220685944, 8.112202235405848, 8.430279501254068,4.84334397535756, 4.788077603692261, 0.4455893345034248, 4.128542234640321, 8.655051619022016, 2.654439672059206, 1.7381083727895241, 0.5314676005600609, 9.974380782085078, 8.30863737267216,])
# dip_h_errs  = np.array([0.032273932802286596, 0.016191263941984817, 0.015063984679703064, 0.026468137451930395, 0.046253020872488324, 0.0189545468726386, 0.04471646665707592, 0.08519578119978814,0.026431941400431515, 0.01855638370368957, 0.01665562478278257, 0.0167958195781363, 0.0271899774215101, 0.01633191036324952, 0.013161016075923307, 0.031187899679534725, 1.7753552518365967, 0.04041745847005961])
# dip_width   = np.array([2.6289940460521213, 2.158778963595822, 2.1298579230090895, 2.3390551001799684, 2.5939552050092036, 2.2631481964378524, 3.948738262110709, 2.831696771350174,2.2748693197349303, 2.235293240264867, 0.4828414294294739, 1.805168817983534, 3.0440716699153763, 1.993377786230161, 2.246900270464055, 2.1275381326112033, 8.223209951407314, 3.623999922813118])
# dip_w_errs  = np.array([0.1328172507224862, 0.056239709733149214, 0.05143807974586877, 0.09379886693379373, 0.1257437245258272, 0.059581106847130944, 0.2812059664983344, 0.2080275194186912,0.08590550432250431, 0.07047947767474935, 0.040005879576747824, 0.05258399124772242, 0.1259748531216104, 0.05494066539163888, 0.0502391132649299, 0.08008283556848994, 2.6789457789154, 0.23296436033406828])
# dip_position= np.array([0.16795573872133765, 0.19669098720002146, 0.1986570998147479, 0.18902475818657563, 0.1702541049336445, 0.18475498908929316, 0.17768863494029724, 0.18898971520705093,0.194487258375066, 0.1930728433508835, 0.4167602026377679, 0.19992632757846096, 0.2133020195492031, 0.21357139510386158, 0.23519615110373238, 0.26077001732812555, 0.22007236308680259, 0.16034389963382994])
# dip_p_errs  = np.array([0.00307642919999648, 0.0024784395891501105, 0.0023552886696381896, 0.003216029956800088, 0.0024105029410143998, 0.0020635373236445216, 0.002305539470299807, 0.0030509771909335206,0.003142035650497058, 0.002879570597796275, 0.02934017332677524, 0.0036027472287003246, 0.002509869919544783, 0.0032152821671600873, 0.002469438275258287, 0.003600524467776364, 0.041816111525112235, 0.0021908628992641376])
# peak_YN     = np.array([1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,0,0])

# number      =          ["00304","00306","00308","00318","00321","00324","00326","00305","00307","00317","00319","00323","00325",]
# file_number =          []
# distances   = np.array([0,-0.24,-0.49,-0.74,-0.96,-1.22,-1.44,0.25,0.49,0.72,0.99,1.23,1.46])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([0.7730988357523062, 4.762128585019412, 0.8457989152287908, 0.3821080593407505, -0.5, 8.477311868282856, 8.32140814840680,4.849722124804802, 4.570966075343057, 0.5770970013376971,  -0.5, 8.513448637410692, 8.220620243055482])
# dip_h_errs  = np.array([0.13732077512833435, 0.027390871626298854, 0.15995691326502215, 0.011761578046858831, 0.5, 0.02788162588854758, 0.0376779106354694,0.01860194299352959, 0.01764580331936349, 0.03087421388130736,  0.5, 0.03717538166083998, 0.08792517713911928])
# dip_width   = np.array([3.180469093543946, 2.1087024042058617, 3.26229290251501, 0.394552186007487, -0.5, 1.8650668364643783, 2.338379419462548,1.836884092841511, 1.6427391013222787, 1.398499108047625,  -0.5, 2.4103276636531867, 3.0189620050961765])
# dip_w_errs  = np.array([1.0538743651784601, 0.07831437760709656, 1.072799687521852, 0.02806681094444418, 0.5, 0.07894789877099921, 0.14304366989997244,0.058822562582477776, 0.05067824809177808, 0.0844887584515428,  0.5, 0.11001868538028313, 0.2030315448037634])
# dip_position= np.array([0.18366634360454093, 0.19748459649383823, 0.158983593623042, 0.5539364333322255, -0.5, 0.11231299213366655, 0.11356193968813015,0.17228763461412647, 0.16804053725727985, 0.32522651540955316,  -0.5, 0.17840480340684167, 0.157620861986999])
# dip_p_errs  = np.array([0.0060521693734578545, 0.0032922426271798535, 0.009291312374393196, 0.03371193150288141, 0.5, 0.002530604741977728, 0.0030315872579792704,0.0033346049161628684, 0.003420473345677902, 0.010973458357304918,  0.5, 0.0027895655917126757, 0.0025363781345711365])
# peak_YN     = np.array([0,1,0,0,0,0,0,1,1,0.75,0.25,0,0])
#Spatial 12 LR #Deleted last point for errors
number      =          ["00350","00352","00354","00356","00358","00360","00362","00364","00366","00368",'00351', '00353', '00355', '00357', '00359', '00361', '00363', '00365', '00367']
file_number =          []
distances   = np.array([0,-0.25,-0.50,-0.75,-1.00,-1.25,-1.50,-1.75,-2.00,-2.25,0.25,0.50,0.75,1.00,1.25,1.50,1.75,2.00])
d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
dip_height  = np.array([4.6829602451227625, 4.511978832357403, 4.272094459819859, 3.8304092298607038, 3.074751943043836, 2.2437032863489854, 1.2969695566237744, 0.21174845988088214, 6.452751775984957, -0.8730971332580428,4.610385603190859, 4.510300055604273, 4.210317018710256, 3.745300779620905, 9.647389171546836, 9.162115417786053, 1.4190729556460129, 0.4931433483396877])
dip_h_errs  = np.array([0.00863327233924809, 0.008635157198894355, 0.009363002826524735, 0.010466892455946855, 0.010740989107973026, 0.00952506258676647, 0.010539564648467644, 0.05033120306786694, 0.04412530073274304, 1.28750921955745,0.010841825551987594, 0.011107580658739033, 0.012649630276548796, 0.02397766707862733, 0.19426096617947783, 0.039736781716294946, 0.016943665148148723, 0.039312540851265405])
dip_width   = np.array([1.7746461063105479, 1.8915735846286137, 1.7624330193382505, 2.0809748679161335, 2.0970287993028833, 1.9342467732960085, 1.9369584386492333, 1.9496413305952722, 3.6591537335356046, 5.654813758593542,1.8455820240623426, 1.7779803052961223, 1.967171601629192, 2.4157559022648316, 4.255103590027883, 3.0951485200103726, 2.1402988122089597, 1.9577019336561496])
dip_w_errs  = np.array([0.026727560887874327, 0.0281918126704827, 0.028740298029228232, 0.0371703979955463, 0.03512249043337468, 0.0316014355271686, 0.03066924182335893, 0.09869096524676721, 0.272765789190586, 2.44245785996612,0.034498000168445515, 0.03443133507666784, 0.04274085906531959, 0.0950154779261999, 1.053398137496108, 0.2848829373468851, 0.05695477305952968, 0.11635096958835921])
dip_position= np.array([0.24967615767482343, 0.2498727298941038, 0.2413550751493367, 0.2606654777466315, 0.22956255496541397, 0.24458499227365793, 0.2650869472005747, 0.3005467463391004, 0.1160038846888007, 0.1769013018165118,0.2327329662927826, 0.22920078693783205, 0.19206674922170894, 0.1552901603732459, 0.13572858466295704, 0.1493331248320371, 0.1444774338604971, 0.1639816123493257])
dip_p_errs  = np.array([0.002376480781686697, 0.0021896398949500487, 0.0024968413309079673, 0.0024282975394231644, 0.0018934664074734897, 0.0022824772626719872, 0.002167099094041982, 0.004864450413151645, 0.0018280149299945568, 0.02804306577992475,0.002620887497045695, 0.0027985999314360634, 0.0023401719895411927, 0.002552688063209286, 0.0020793696984032464, 0.001846644206501366, 0.001856521731624231, 0.0031876809495877774])
peak_YN     = np.array([1,1,1,1,1,1,1,0.5,0,0,1,1,1,1,0,0,1,1,0])






def calculate_best_fit_line(x, y):
    slope, intercept = np.polyfit(x, y, 1)
    best_fit = slope*x + intercept

    coefficients = np.polyfit(x, y, 2)  # 2 indicates a quadratic fit
    parabola = np.polyval(coefficients, x)
    return parabola

#plot the contact potential against the distance with error bars


# best_fit_1 = calculate_best_fit_line(distances_1, Contact_potential_1)
# best_fit_2 = calculate_best_fit_line(distances_2, Contact_potential_2)
# best_fit_3 = calculate_best_fit_line(distances_3, Contact_potential_3)

# plt.errorbar(distances_1, Contact_potential_1,xerr=d_errors_1, yerr=CP_errors_1, color='blue', fmt='o')
# plt.plot(distances_1, best_fit_1, 'r', color='red', label='Best fit line')

# plt.errorbar(distances_2, Contact_potential_2,xerr=d_errors_2, yerr=CP_errors_2, color='red', fmt='o')
# plt.plot(distances_2, best_fit_2, 'r', color='magenta', label='Best fit line')

# plt.errorbar(distances_3, Contact_potential_3,xerr=d_errors_3, yerr=CP_errors_3, color='green', fmt='o')
# plt.plot(distances_3, best_fit_3, 'r', color='#2CA02C', label='Best fit line')

# plt.errorbar(distances_4, Contact_potential_4, xerr=0, yerr=CP_errors_4, color='blue', fmt='o', label='Contact potential')
# plt.errorbar(distances_4, cut_off_potenital_4, xerr=0, yerr=Cutoff_CP_errors_4, color='red', fmt='o', label='Cut off potential')
# plt.errorbar(distances_5, Contact_potential_5, xerr=d_errors_5, yerr=CP_errors_5, color='blue', fmt='o', label='Contact potential')
# print(len(distances_5),len(max_residual_5),len(max_bias_5))
# plt.scatter(distances_5, max_residual_5, color='red', label='Max residual')
# print(len(distances_5),len(well_depths_5))
# plt.errorbar(distances_5, well_depths_5,yerr=depth_errors_5, fmt= 'o', color='green', label='Max bias')
# plt.errorbar(distances_5, well_depths_5, xerr=d_errors_5, yerr=depth_errors_5, color='green', fmt='o', label='Well depth')
print(len(distances),len(dip_height),len(dip_position),len(dip_width))
plt.errorbar(distances, dip_height, xerr=d_errors, yerr=dip_h_errs, color= 'blue', fmt='o', label='Dip height')
# plt.errorbar(distances, dip_width, xerr=d_errors, yerr=dip_w_errs, color= 'blue', fmt='o', label='Dip width')
# plt.errorbar(distances, dip_position, xerr=d_errors, yerr=dip_p_errs, color= 'green', fmt='o', label='Dip position')


# plt.scatter(distances, peak_YN, color='red', label='visable Peak or not')

plt.xlabel('Distance (nm)')
plt.ylabel('Peak Y/N (nm)')
# plt.xlim(-155,155)
plt.legend()
plt.title('dI/dV Curve analysis graphs')
plt.show()
