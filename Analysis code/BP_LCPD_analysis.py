import matplotlib.pyplot as plt
import numpy as np


#Spatial data from 16/08/24
# distances_1 =  np.array([0,0,0.52,0.80,1.11,1.47,2.09,3.22])
# Contact_potential_1 = np.array([0.18,0.17,0.18,0.19,0.2,0.22,0.21,0.22])
# CP_errors_1 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_1 = np.array([0,0,0.01,0.01,0.01,0.01,0.01,0.01])

# distances_2 =  np.array([1.97,1.30,0.66,0,-0.68,-1.31,-1.98])
# Contact_potential_2 = np.array([0.2,0.2,0.21,0.2,0.2,0.19,0.19])
# CP_errors_2 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_2 = np.array([0.02,0.02,0.01,0,0.01,0.02,0.02])

# distances_3 =  np.array([2.03,1.37,0.74,0,-0.56,-1.17,-1.83])
# Contact_potential_3 = np.array([0.21,0.21,0.19,0.18,0.2,0.2,0.18])
# CP_errors_3 = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# d_errors_3 = np.array([0.01,0.01,0.01,0,0.01,0.01,0.01])
# number =                       [153 ,157 ,154 ,160 ,164 , 156 , 158 , 162]
# distances_4 =         np.array([0   ,0   ,0.94,1.89,2.82,-0.97,-1.91,-2.88])
# Contact_potential_4 = np.array([0.1 ,0.13,0.13,0.14,0.22, 0.13, 0.16, 0.22])
# cut_off_potenital_4 = np.array([0.07,0.3 ,0.09,0.05,0.19, 0.27, 0.17, 0.18])
# CP_errors_4 =         np.array([0.01,0.01,0.01,0.01,0.01,0.01, 0.01 ,  0.01])
# Cutoff_CP_errors_4 =  np.array([0.09,0.09,0.09,0.09,0.09,0.09, 0.09 ,  0.09])
# d_errors_4 = np.array([])

#Spatial data from 19/08/24
# number =                       [449,451,453,455,457,459,461,463,465,467,469]
# file_name =                    [268,270,272,274,276,278,280,282,284,286,288]
# distances_5 =         np.array([-1.04,-2.16,-3.34,-4.41,-5.59,1.16,2.39,3.44,4.45,3.44,5.64])
# d_errors_5 =          np.array([0.03,0.05,0.05,0.05,0.05,0.05,0.06,0.06,0.06,0.06])
# Contact_potential_5 = np.array([0.19 ,0.18,0.17  ,0.2  ,0.2  ,0.2  ,0.19 ,0.205  ,0.21,0.21])
# CP_errors_5 =         np.array([0.005,0.005,0.004,0.003,0.003,0.004,0.003,0.006,0.003,0.004])
# max_residual_5 =      np.array([0.1489,0.1155,0,0,0,0.1035,0,0,0.0795,0,0.1702])
# max_bias_5 =          np.array([0.28  ,0.47  ,0,0,0,0.435,0,0,0.62,0,0.37])


# number =                       [495,496,497,498,499,500,501,503,504,505,506,507]
# file_name =                    [314,315,316,317,318,319,320,322,323,324,325,326]
# distances_5 =         np.array([-0.34,-0.72,-1.07,-1.40,-1.77,-2.08,-2.441,0.33,0.71,1.03,1.38,1.73,2.08]) ### This is the data for slide 39 in scratch pad
# d_errors_5 =          np.array([0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06])
# max_bias_5 =          np.array([0.3120001, 0.36800009, 0.4320001, 0.51200002, 0.67200011, 0.76000005, 0, 0.31999999, 0.37599999, 0.45600003, 0.59200007, 0.6880001,0])

# number =                       [471,473,475,477,478, 479,481,483,485] #Number on image
# file_name =                    [289,290,292,294,296, 298,300,302,304] #File name
# distances_5 =         np.array([0, 1.20,2.29,3.40,4.08,-1.15,-2.24,-3.42,-4.57]) #Distance measured in nm
# d_errors_5 =          np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01]) #Error in distance
# max_bias_5 =          np.array([0.31499994, 0.48000002, 0.78999996, 0, 0.39499998,0, 0, 0]) #Well position
# #Well depth
# well_depths_5 =       np.array([0.13853357325280397, 0.14387903522809178, 0.12032916771994409, 0.10920208083530394, 0.07038546859238941, 0.1296870079292956, 0.04337245457452322, 0.05068743582084121, 0.055250692408798735])
# #'Rough depth error
# depth_errors_5 =      np.array([0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05])

#DATA for spatial 6 (?)               
# number =                       [517   , 518   , 519   , 520   , 521   , 522   , 523   , 524   , 525   , 526   , 527   , 528   , 529   , 530   ] #Number on image
# file_name =                    [336   , 337   , 338   , 339   , 340   , 341   , 342   , 343   , 344   , 345   , 346   , 347   , 348   , 349   ] #File name 
# distances_5 =         np.array([0     , 0.44  , 0.93  , 1.85  , 1.39  , 2.33  , 2.79  ,-0.14  ,-0.55  ,-1.03  ,-1.48  ,-1.92  ,-2.40  ,-2.75  ]) #Distance measured in nm
# d_errors_5 =          np.array([0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.02  , 0.03  ]) #Error in distance
# max_bias_5 =          np.array([0.3360, 0.3573, 0.5333, 0.4107, 0.6507, 0.7467, 0.6453, 0.3307, 0.3413, 0.4320, 0.5333, 0.7360, 0.7253, 0.4427]) #Well position
# well_depths_5 =       np.array([0.1744, 0.1640, 0.0986, 0.1596, 0.1012, 0.0508, 0.0438, 0.1857, 0.1886, 0.1767, 0.1204, 0.1022, 0.0689, 0.0448]) #Well depth
# depth_errors_5 =      np.array([0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05, 0.05,0.05, 0.05]) #'Rough depth error

#Data for spatial 8
# number =                       [] #Number on image
# file_name =                    [390  , 391 , 392 , 393 , 394 , 395 , 396 , 397 , 398 , 399 ] #File name 
# distances_5 =         np.array([0    , 30  , 60  , 90  , 120 , 150 , 0   , -30 , -60 ,-90  ]) #Distance measured in nm
# d_errors_5 =          np.array([0.02 , 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]) #Error in distance
# LCPD_5 =          np.array([-0.14,-0.17,-0.18,-0.20,-0.16,-0.18,-0.18,-0.13,-0.15,-0.15]) #Well position
# max_bias_5 =          np.array([0.37666667, 0.40000004, 0.41666669, 0.41000003, 0.42666668, 0.44, 0.38, 0.37333333, 0.36666667, 0.32333338])
# well_depths_5 =       np.array([0.09 , 0.12   , 0.15, 0.16, 0.17, 0.15, 0.11, 0.06, 0.09, 0.08]) #Well depth
# FWHM_5 =              np.array([0.10 , 0.09   , 0.08, 0.08, 0.07, 0.06, 0.09, 0.09, 0.11, 0.15])#abs value of FWHM
# depth_errors_5 =      np.array([0.01 , 0.01, 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01]) #'Rough depth error
# FWHM_errors_5 =       np.array([0.01 , 0.01, 0.005, 0.005, 0.005, 0.005,0.005 , 0.01, 0.01, 0.01]) #'Rough depth error

### DF Z


#Spatial 7 redo UD
# number      =          ["00017","00020","00023","00026","00029","00031","00034","00037","00040","00043"]
# file_number =          []
# distances   = np.array([0.31,0.60,0.96,1.31,1.64,-0.34,-0.68,-1.05,-1.34,-1.66])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01, 0.01])
# dip_height  = np.array([2.984719293799875    ,  2.7090332404029573  , 2.3379283447252934  , 1.2793321771382042  , -0.5361913646321042,2.5881167149627275, 1.9251626152505612, 1.2742114170563084, 0.0036061724441941753, 7.231125742332429 ])
# dip_h_errs  = np.array([0.01908215813853236  , 0.023774667452496536, 0.048620651219435276 , 0.02984144524768235 , 0.7124395176094928,0.03034680448683324, 0.03227107226587375, 0.01508986106946947, 0.1652037618912669, 0.09307432685572564  ])
# dip_width   = np.array([2.6789917574970987   , 2.727400606160183   , 3.2672854451956432   , 2.8753638547742586  , 4.927786132253248,2.8144345692661568, 3.6449941374008086, 2.6669224527710242, 2.9619547095413887, 6.623305173775462   ])
# dip_w_errs  = np.array([0.06556064857939363  ,  0.08294052796969931, 0.17499241728930787  , 0.12348195321646123 , 1.1295257327438075,0.10468062471514171, 0.14942337574251274, 0.051140056700897975, 0.3114988412139195, 0.7703704338683272  ])
# dip_position= np.array([0.19794068220168815  , 0.1953634628106038  , 0.17708699848588738  , 0.17965418015396428 , 0.16860419720911854,0.17692541122661418, 0.1733515282298399, 0.2070832398500242, 0.21385284232060778, 0.09338866185591052 ])
# dip_p_errs  = np.array([0.0026416568232354534, 0.003165080938321284, 0.0037288137137782267, 0.003207983433296061, 0.018870609180731485,0.0032979230271117602, 0.0024759510292146885, 0.0021024089131621466, 0.007087819315758293, 0.0013023792883066529])
# peak_YN     = np.array([1  ,1    , 1    ,1  ,0 ,1,1,1,0.5,0      ])

# LR
# number      =          ["00047","00048","00049","00051","00052","00053","00055","00056","00057","00061","00058"]
# file_number =          []
# distances   = np.array([0,-0.36,-0.70,-1.02,-1.34,-1.68,0.30,0.63,0.96,1.30,1.65])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([2.9373758436311768, 2.7057912095446337, 2.1648686594935382, 1.5799795381682271, 1.0768218702172783, 2.00715232437357,2.5573463958812352, 0.07153301811403592, 1.4560804448351463, 0.7103322018973444, 9.221776933713336])
# dip_h_errs  = np.array([0.017615233984627447, 0.023062072635248176, 0.06588780159865813, 0.013725344390681236, 0.021621913212727637, 0.2070251079779654,0.017592481913974233, 0.13861262025872254, 0.026760653326206908, 0.022987736608054768, 0.05714744006614024])
# dip_width   = np.array([2.2319554628291742, 2.4517429847625607, 3.7237662671846254, 2.7696502970799397, 2.372907244407054, 5.117143602060021,2.264444297974664, 2.56042918615209, 2.0436418507279313, 1.473511969437267, 3.147946694804171])
# dip_w_errs  = np.array([0.05159061952605696, 0.07238357932648615, 0.30501570563585445, 0.04615252199853928, 0.07437577189826948, 0.8117443893301912,0.05181290534093793, 0.2278767684589036, 0.07606201871515594, 0.060553335736474014, 0.19084569360418008])
# dip_position= np.array([0.16812550461743073, 0.14192736973847433, 0.1317601497047756, 0.21011971475996863, 0.24937346684392186, 0.12481633600669205,0.131108929461192, 0.08984889240054207, 0.0961777710913708, 0.09127799622201832, 0.08739783015718841])
# dip_p_errs  = np.array([0.0025596727170604247, 0.0025103031732244107, 0.003612768310084299, 0.0017797860517795242, 0.003966878982881559, 0.003072529042757686,0.0019358270409551572, 0.003285252335391619, 0.0025233154082250522, 0.002445625306343434, 0.0015523481997773306])
# Intergral   = np.array([3.4873709199665005e-11, 3.1037212282461115e-11, 3.383675518520447e-11, 4.8338996367813905e-11, 4.9032139551845614e-11, 3.1583796219452583e-11,2.7344653800698458e-11, 1.2200877018324805e-11, 1.8812276677223223e-11, 1.2442723620861209e-11, 1.7987676462100727e-11])
# integral_err= np.array([3.871759490755023e-25, 3.445822769616704e-25, 3.7566344685218653e-25, 5.366706675481881e-25, 5.443661027709281e-25, 3.506505776790523e-25,3.0358664249939226e-25, 1.3545694586364126e-25, 1.4457767498569271e-24, 9.182904434650334e-23, 1.9970332567732204e-25])
# peak_YN     = np.array([1,1,0.5,1,1,0,1,0,1,1,0])

# Spatial 7  reference: 00009 UD (last data point deleted)
# number      =          ["00017","00020","00023","00026","00029","00031","00034","00037","00040","00043"]
# file_number =          []
# distances   = np.array([0.31,0.60,0.96,1.31,1.64,-0.34,-0.68,-1.05,-1.34])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01])
# dip_height  = np.array([3.1347985456443954, 2.5824662650203867, 2.0504142084214574, 1.2094113151885684, 0.41800646074628506,2.465580739786351, 1.6149165345876508, 1.0727278137863971, 0.0604340784500073 ])
# dip_h_errs  = np.array([0.015389470452637973, 0.03501937112117988, 0.07083830587834906, 0.018857946738801465, 0.048245126452969044,0.022488223914513397, 0.036204993818203815, 0.012304974832226813, 0.0667904319702959 ])
# dip_width   = np.array([2.483274260395568, 2.9756358167042327, 3.8279846225815617, 2.8643988150948694, 2.536091026435784,2.507496921400756, 3.205666801339972, 2.011121690088524, 1.8680627494276087 ])
# dip_w_errs  = np.array([0.049617300569605234, 0.13248567615515686, 0.25335314538732945, 0.06919052383232398, 0.11938322906503036,0.07294880389272157, 0.13098879536125407, 0.04239788106328328, 0.10692489576360607 ])
# dip_position= np.array([0.17843987019837257, 0.16903635668958936, 0.16007279857567533, 0.19090366448058008, 0.21887857925739929,0.16554887798098633, 0.1341569523850735, 0.15363989184017848, 0.1759236679029067])
# dip_p_errs  = np.array([0.0021357782408394314, 0.0035644743513652895, 0.003107653696509375, 0.0021068131573919366, 0.002831205277504519,0.0028477491366145366, 0.0022340429427438455, 0.0017660993928601883, 0.004373271162182034])
# Intergral   = np.array([3.952914283094789e-11, 4.049830607770898e-11, 4.0155734286965304e-11, 4.333142834194732e-11, 3.427667248114254e-11,3.6822067324082345e-11, 3.245828669761772e-11, 2.6378244762943793e-11, 1.7971746443989472e-11])
# integral_err= np.array([4.388616451461479e-25, 4.496215186578943e-25, 4.458182077611873e-25, 4.810754943512498e-25, 3.8054750996099944e-25,4.0880706957493846e-25, 3.6035937231579627e-25, 2.9285734685018154e-25, 1.9952646694842393e-25])
# peak_YN     = np.array([1  ,1    , 1    ,1  ,0.5 ,1,1,1,0.5    ])

# #spatial 9 LR
# number      =          ['00131', '00120', '00121', '00122', '00123', '00124', '00125', '00126', '00127', '00128', '00129', '00130']
# file_number =          []
# distances   = np.array([0,0.17,0.33,0.51,0.72,0.93,1.15,1.36,-0.4,-0.6,-0.81,-1.02])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([3.4505516895986115, 3.094366950081634, 2.43873694762098, 1.5738449232629892, 2.1357634930953178, 1.7024289501051073, 1.0219800566243766, -0.16651190714534925, 5.107499980289588, 2.821042746286648, 2.64693631964561, 2.2843574410875345 ])
# dip_h_errs  = np.array([0.04607073779153889, 0.05531041708771819, 0.09541329512632943, 0.1614994957710647, 0.0348927721917759, 0.036837003088279134, 0.07429100959342883, 0.49549520651858564, 1.9290308329447794, 0.22655242285280824, 0.05677064434057204, 0.03498841687551297])
# dip_width   = np.array([2.00693027287548, 3.855266661527191, 3.8813948130311196, 5.219628323389658, 2.480809025436707, 2.915245089884851, 3.510654609883336, 5.115954255634156, 6.349443061760431, 4.028794441522657, 2.565028940565458, 2.1897229988026585])
# dip_w_errs  = np.array([0.10137134914146569, 0.3244309658975292, 0.3088312469301628, 1.0647286225039287, 0.10143640067239815, 0.14587427797306246, 0.2847739756741745, 0.8619809593441295, 3.0706950633020313, 0.9699552072236769, 0.19163157628519947, 0.12291304134655359])
# dip_position= np.array([0.1498494111227242, 0.16570226698009793, 0.18361750345617617, 0.17919148775601754, 0.19153011282080354, 0.20479680163433595, 0.19597762305824787, 0.20564207426520645, 0.1434572100987969, 0.1042093811767408, 0.09942386424300373, 0.09113782437328041])
# dip_p_errs  = np.array([0.002972763508225624, 0.0026289538479874145, 0.0023971597504080623, 0.003781356273039886, 0.002735854436098689, 0.0030242205998267067, 0.003235185852575449, 0.013925774307261884, 0.035145651327676046, 0.003996268868830938, 0.0026212167398817834, 0.0024269489818738825])
# Intergral   = np.array([2.1857376248213967e-11, 3.406319723329529e-11, 3.5865689568695e-11, 3.796511472241564e-11, 3.368092651789552e-11, 3.9311306429344816e-11, 3.8612219622477475e-11, 3.467432791003653e-11, 2.3493470861610656e-11, 2.110192305246352e-11, 1.817774142294323e-11, 1.6142825233336058e-11])
# integral_err= np.array([2.426656236866217e-25, 3.781774586075236e-25, 3.981891435322349e-25, 4.214974449736135e-25, 3.7393340110875606e-25, 4.364431752595356e-25, 4.286817525675776e-25, 3.8496237209125236e-25, 2.6082992278920364e-25, 2.342784083671336e-25, 2.0181347063434032e-25, 1.7922136256549658e-25])
# peak_YN     = np.array([0,0.5,0.5,0.5,0.75,0.5,0.5,0,0,0,0,0])

# UD
# number      =          ["00119","000111","000112","000113","000114","000115","000116","000117","000118",]
# file_number =          []
# distances   = np.array([0,-0.05,-0.23,-0.44,-0.64,0.19,0.40,0.61,0.81])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([3.9181312403434374, 0.5857537455307277, 3.6087793308623297, 2.3498514159686503, 1.6388800377818973, 2.659617880343216, 1.6501063559834594, 0.3655477145533644, 1.053382975386362])
# dip_h_errs  = np.array([0.45411787771902357, 0.09541570515824435, 0.05582886748440826, 0.020231853234906762, 0.023031316246063787, 0.02052353859274217, 0.0355764239124517, 0.12133873522884243, 0.23735719155875198])
# dip_width   = np.array([5.738733901834097, 4.372204684749868, 2.8615185711784443, 1.8531087644502773, 1.916759287909072, 3.022629567302717, 3.2213509374708473, 3.3368244024370792, 6.915843094385059])
# dip_w_errs  = np.array([1.155557930665414, 0.5089486995413689, 0.16487107973736284, 0.06409625859826212, 0.06140778026999708, 0.10425937198015076, 0.1471698916008326, 0.3888557065606178, 2.797917474789448])
# dip_position= np.array([0.17643589378509364, 0.1916868568994748, 0.15674393208417856, 0.15512041902058699, 0.13314207084096277, 0.20941232857537098, 0.2550134330308294, 0.2609747024101144, 0.19309821655786577])
# dip_p_errs  = np.array([0.006292221152489713, 0.0022351124895514207, 0.0024825111181085366, 0.0031961953051190314, 0.0020706527950554257, 0.0021284876023936303, 0.002874369461042606, 0.004472194545701514, 0.0029180278953729972])
# Intergral   = np.array([3.4158382677343143e-11, 3.390731427778118e-11, 2.8648266171560358e-11, 2.5649910991061173e-11, 2.0782677220951405e-11, 4.134106773063594e-11, 5.0007678614542754e-11, 4.095581046447454e-11, 3.2769362251130483e-11])
# integral_err= np.array([3.7923422932343456e-25, 3.7644681014393976e-25, 3.1805964719256294e-25, 2.8477121761861983e-25, 2.307340676405301e-25, 4.589780525714009e-25, 5.551967620592041e-25, 4.547008376984356e-25, 3.6381300473487514e-25])
# peak_YN     = np.array([0,0,0.5,1,0,0.5,0.75,1,0])

#data for spatial 10 (dF/dZ)
#LR
# number      =          [ 864  , 865  , 867 , 869  , 871 , 873 , 875,  877  , 879  ,881   , 866 , 868 ,   870 , 872 , 874  , 876 , 878 , 880 , 882]
# file_number =          ['00208', '00209', '00211', '00213', '00215', '00217', '00219', '00221', '00223', '00225','00210', '00212', '00214', '00216', '00218', '00220', '00222', '00224', '00226']
# distances   = np.array([0    ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62, -1.88, -2.15, -2.43 ,  0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([4.796380826205975, 4.769401923917286, 4.72959932775031, 4.248520196385927, 3.5840000338218476, 2.4767598308674, 1.293227632864186, 0.25476449325997264, 4.825419550124982, 1.6484107474225376,4.811638327266466, 3.4926280949416446, 3.9816144488126084, 3.490356710520865, 2.089905945356838, 1.2411824183869022, 2.065713116132498, 5.201844519759491, 4.904466885506765])
# dip_h_errs  = np.array([0.011719926716152641, 0.019454947615101196, 0.014121007589637278, 0.030700917826623417, 0.019650043651277805, 0.0304676071657581, 0.013990785507314198, 0.1188102209690109, 0.039974599141819396, 3.669592175430954,0.012160989577050222, 0.6902105750391808, 0.024975890131772035, 0.11243958422579187, 0.15776858518705503, 0.026613009632290987, 0.05370462540540633, 0.8948281989623568, 0.029930879400411642])
# dip_width   = np.array([1.8865468229558116, 2.014340820436971, 1.6866589476320883, 2.29144283776661, 1.9523540750717705, 2.4132168144538793, 2.2403114319431965, 2.69631462944984, 2.2058393309841158, 9.285196802239696,1.635439653963543, 3.7347718072479994, 2.2548644670953384, 3.4070793407824396, 3.611887810054676, 2.6558679231655127, 2.9432448938775777, 6.593345776693053, 2.2363062776545677])
# dip_w_errs  = np.array([0.0518153057810106, 0.07503036829299747, 0.046770675597126755, 0.10722295263989823, 0.07612630603846182, 0.1446344973453274, 0.07124043638379081, 0.7218975939739317, 0.22165053739235466, 16.273334454243834,0.043325469405764795, 0.8154003137166043, 0.11074690781766414, 0.5672266360674028, 0.4812659039524752, 0.17173845533658946, 0.28241830206660085, 4.077225687970846, 0.1607406663088726])
# dip_position= np.array([0.21202783563429212, 0.20307429134095614, 0.1941569715405012, 0.16695714007701956, 0.1641956677896462, 0.16365992961956363, 0.19676831331974756, 0.19678630744721246, 0.07902665512959488, 0.07470644213571073,0.2194176288231351, 0.2641394448973654, 0.15655851153149095, 0.14009408330072265, 0.14516072288079337, 0.16677746012430633, 0.12413442424623149, 0.10236252704164314, 0.12857587625309874])
# dip_p_errs  = np.array([0.0018787030863358929, 0.002066192768268973, 0.001931228381147634, 0.0016128489489612282, 0.0018593467679134182, 0.001995714154184051, 0.0015021125678868024, 0.0033093721046545737, 0.0020019982078352885, 0.008185953759923958,0.002271210730420297, 0.05435293314045562, 0.001758332811598339, 0.002372768126682317, 0.00239506324997441, 0.0019393491917069547, 0.0016577885430941225, 0.003502074755333953, 0.0022533018622110813])
# Integral    = np.array([2.71771984838869e-11, 2.5958522856302362e-11, 2.3414020497714242e-11, 2.1516227996015297e-11, 2.0884703273735116e-11, 2.1892711603007716e-11, 2.6192063317889216e-11, 1.7028430362830533e-11, 1.0549536167245493e-11, 1.0585625203570786e-11,2.6600904205839025e-11, 2.2447897821238268e-11, 2.0648766449028756e-11, 1.9423678913096276e-11, 1.9215614757801835e-11, 2.291360335838167e-11, 1.7059910379419666e-11, 1.4463162249603082e-11, 1.7165667116535977e-11])
# integral_err= np.array([3.0172751501619135e-25, 2.881974976032527e-25, 2.599478465560772e-25, 2.3887811724260575e-25, 2.318667843696511e-25, 2.4305792493137486e-25, 2.907903175796058e-25, 1.8905355462040567e-25, 1.1712337951991774e-25, 1.1752404831056646e-25,2.953293632517065e-25, 2.492217301557161e-25, 2.292473594181916e-25, 2.156461555224562e-25, 2.1333617936438546e-25, 2.5439210025603642e-25, 1.8940305301273404e-25, 1.6057335738398717e-25, 1.9057718865829163e-25])
# peak_YN     = np.array([0     ,0     , 0.5  , 1    ,1     , 1    , 1    , 1    , 1    , 1    ,1    , 1    , 1    ,0.5  , 0    ,0.5  ,0    ,0    ,0])

# UD1
# number      =          [ 842  ,843,845,847,849,851, 857 ,853,859   , 860  ,  844 ,  846,  848,  850,  852,  854,  856,  858, 861]
# file_number =          ['00186', '00187', '00189', '00191', '00193', '00195', '00197', '00203', '00201', '00204','00188', '00190', '00192', '00194', '00196', '00198', '00200', '00202', '00205']
# distances   = np.array([  0    ,-0.25 , -0.50, -0.75, -0.99, -1.24, -1.48, -1.73, -1.95, -2.16 ,0.25  , 0.47, 0.74, 0.98, 1.24,1.48 , 1.72, 2.18  ])
# d_errors    = np.array([ 0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0    , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,0.01])
# dip_height  = np.array([4.839133810047384, 4.723104671979826, 4.557126822801663, 4.1987540981630955, 3.6728464676119055, 2.883324907451726, 2.0686887753630705, 1.1599479326412208, 0.40297830864144507, 4.839732279626221,4.8009592866467115, 4.5177887177557325, 4.111514413579351, 3.5622440494503635, 2.644538877097701, 1.8175880480374027, 0.6933921793969897, 4.867843833727962])
# dip_h_errs  = np.array([0.015236074863395711, 0.02306977249793222, 0.012640656455944898, 0.03591375470549058, 0.0349261943463534, 0.0369650530146131, 0.0234020998378216, 0.029320040248837973, 0.0454150086833185, 0.08885255587971148,0.0112904940134278, 0.016922777028996, 0.028513493351816094, 0.015765981136142262, 0.028927126045550113, 0.0458703455536468, 0.016210922464615137, 0.0344395050669978])
# dip_width   = np.array([1.871230610829455, 2.0586890822521458, 1.9249460211073153, 2.2458783723786095, 2.615066076673861, 2.7239520222271913, 2.3531736421939446, 2.469770934305226, 2.247778577410974, 3.3733243851942523,1.750012647330749, 2.1684257830869034, 2.6036962826367227, 2.0339124320603768, 3.471695153150882, 2.411688115560394, 2.4907734902022924, 2.900611144992924])
# dip_w_errs  = np.array([0.06299764178391562, 0.09184651772910038, 0.061808474728134916, 0.13782298477056656, 0.20734766208902136, 0.19244556445998856, 0.10206319409875084, 0.10547030287325114, 0.18513809015764632, 0.6285950579279864,0.044964659550680526, 0.09175646222960576, 0.14958315438946207, 0.07558249548956414, 0.25204438887259845, 0.12393397656627961, 0.08693003376322198, 0.22364488887857098])
# dip_position= np.array([0.2195539297867462, 0.2004809243655736, 0.20318645685020592, 0.17873593180409814, 0.16690826457444918, 0.1543259398444375, 0.1791489680035635, 0.17050024046259438, 0.14693707323734004, 0.10512108948735875,0.22473885916953334, 0.21434439302558753, 0.21507968657859036, 0.2133943549273807, 0.21061327354237508, 0.22714097658623225, 0.24386579066422903, 0.14528571132750343])
# dip_p_errs  = np.array([0.002375052821772385, 0.002366924183197236, 0.002078402083910321, 0.002421143345182093, 0.0024150922211894138, 0.0017760687853158915, 0.0016243529250320357, 0.001312000636569672, 0.0021215582031774115, 0.002195994329487571,0.0020772375195177136, 0.0023530736233900213, 0.0022117256660558345, 0.002264053518101671, 0.0016776060356800523, 0.002223591726064111, 0.001675101194456246, 0.0016867246346329752])
# Integral    = np.array([2.7913772312887435e-11, 2.581336184878315e-11, 2.6355224500129896e-11, 2.32329982962482e-11, 2.2817760632682893e-11, 2.1045813710847977e-11, 2.3731522584734277e-11, 2.228244010981625e-11, 1.722242486985485e-11, 1.4774624625642837e-11,2.8085222225608702e-11, 2.85102779696401e-11, 2.920770813057479e-11, 2.7887982858146065e-11, 2.980522158879543e-11, 2.8213025789118556e-11, 3.299529743348131e-11, 2.0130779355157883e-11])
# integral_err= np.array([3.099051272591184e-25, 2.8658588667499652e-25, 2.9260177059209242e-25, 2.579380963957178e-25, 2.5332803224790026e-25, 2.336554695375523e-25, 2.6347282782983903e-25, 2.47384780547491e-25, 1.912073263038977e-25, 1.6403128439582511e-25,3.1180860366584964e-25, 3.1652767040357795e-25, 3.2427070063095523e-25, 3.096188067946544e-25, 3.3090443261935476e-25, 3.1322750825422747e-25, 3.663213891500628e-25, 2.2349654743745043e-25])
# peak_YN     = np.array([0      ,0     ,1     ,0.5   ,1     ,1     ,1     , 1    ,1     , 1    , 1    ,  1  ,1    ,1,1,1,1,0])

# # UD2
# number      =          [903,901,899,896,893,891,889,887,885,884,886,888,890,892,894,897,900,902,904]
# file_number =          ['00228', '00229', '00231', '00233', '00235', '00237', '00240', '00243', '00245', '00247','00230', '00232', '00234', '00236', '00238', '00241', '00244', '00246', '00248']
# distances   = np.array([0,-0.25,-0.50,-0.76,-0.98,-1.24,-1.48,-1.74,-1.97,-2.22,0.22,0.46,0.74,0.97,1.24,1.71,1.96,2.22])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0,0.01 , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 ])
# dip_height  = np.array([4.750787982024657, 4.791078724471842, 4.507445540578248, 4.125244457747974, 3.7927999132354904, 3.0112908213307366, 2.1876189941981297, 1.1350346730785676, -0.6342950854978899, 3.8668840395950688,4.689160313932527, 4.572872199671819, 4.0269468449270605, 3.6352759811221884, 2.320803101731805, 0.9598982720540306, -0.0046132353094568345, 278.8268707857379])
# dip_h_errs  = np.array([0.01158559809705226, 0.022419059757299187, 0.0148820539042595, 0.028118026330434722, 0.017570064198525474, 0.19071414098643064, 0.02153454729703665, 0.021126016906292656, 0.9604552044464093, 0.05909688228018115,0.07404444064956077, 0.012530683606911744, 0.027922163085192242, 0.021009178808836928, 0.5885705895301883, 0.022554070501968945, 0.2542937663487906, 168728.4114279761])
# dip_width   = np.array([1.9124367294601639, 2.081542692782837, 1.811031269114452, 2.715254329195338, 1.7894808413347998, 3.581776589465472, 1.6232500420365836, 2.228800579566082, 3.7749797721986478, 2.1875355911391834,2.2202009175224906, 1.9385946660631925, 2.2296185169607936, 1.9981331069539428, 3.8053098115864206, 2.712864206822507, 2.671004348232498, 133.31025417071194])
# dip_w_errs  = np.array([0.051535096389445596, 0.07842669273709572, 0.06846401261268682, 0.1921473419190332, 0.07986964355166912, 0.48531193472461476, 0.062168178260597576, 0.09597315272907805, 1.699231315803773, 0.3121338916563884,0.13065468885694617, 0.059837390255677476, 0.11154891306777955, 0.09121644657532527, 0.8027903017078127, 0.1416916851531698, 0.7538224602022223, 41454.452726842865])
# dip_position= np.array([0.19159592504404388, 0.18764095685178953, 0.17865151873283486, 0.15594479857109902, 0.15547256494932463, 0.13391850256001847, 0.15752862055270095, 0.1586985552964101, 0.16050500029814174, 0.07820180168644957,0.20236609283608742, 0.20646087757757303, 0.18477654487740497, 0.18323541656236816, 0.18401499627750706, 0.21134711850212237, 0.18030405551453535, 7669.081697932003])
# dip_p_errs  = np.array([0.0016260463688201852, 0.0017547855669401017, 0.0023769774217115504, 0.0019179224817732188, 0.0024897848815431025, 0.0031816977973139187, 0.0021664289030562294, 0.001609939761280069, 0.03050920889410356, 0.002830291857813993,0.004270245664455957, 0.0019919752474622365, 0.00209579058529224, 0.0024070397413138234, 0.02701378430022163, 0.0018919330242133836, 0.006622151949356234, 54660869.87854753])
# Integral    = np.array([2.4631207274928843e-11, 2.3822664163672326e-11, 2.2812787100404194e-11, 2.1515290225309525e-11, 1.9788021898086107e-11, 1.7117067012161666e-11, 1.8265285880288866e-11, 2.0938387261244947e-11, 1.1409808287600568e-11, 1.0398703501687089e-11,2.129832136193884e-11, 2.676337139726635e-11, 2.409657032622515e-11, 2.3680939820654637e-11, 1.785997224062947e-11, 2.906836708250485e-11, 1.4651290850766676e-11, 1.160278990751249e-11])
# integral_err= np.array([2.734613344094066e-25, 2.6448470262421614e-25, 2.53272814947405e-25, 2.388677058963121e-25, 2.1969117523041987e-25, 1.9003761910953617e-25, 2.027854093565747e-25, 2.3246279635952214e-25, 1.266743186745308e-25, 1.1544880053823246e-25,2.364588676189032e-25, 2.971331114183945e-25, 2.6752567190674484e-25, 2.62911246336535e-25, 1.9828552400712985e-25, 3.227237042325287e-25, 1.6266200443001063e-25, 1.2881684505208758e-25])
# peak_YN     = np.array([0.5  ,0    , 1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,1    ,0.5 , 1, 0    ,0 ])

#Spatial 10 With fitted polynomial LR
# number      =          [ 864  , 865  , 867 , 869  , 871 , 873 , 875,  877  , 879  ,881   , 866 , 868 ,   870 , 872 , 874  , 876 , 878 , 880 , 882]
# file_number =          ['00208', '00209', '00211', '00213', '00215', '00217', '00219', '00221', '00223', '00225', '00210', '00212', '00214', '00216', '00218', '00220', '00222', '00224', '00226']
# distances   = np.array([0    ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62, -1.88, -2.15, -2.43 ,  0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([4.804632263405317, 4.650496892333403, 4.560444960088828, 4.1665645548559, 3.5125481151227236, 2.3473587337781217, 1.3329173872780042, 0.16246717750139936, 1.289138143638624, 1.6491593987166862, 4.710080688792043, 4.50016213466953, 4.165092222981034, 3.295210149311603, 2.249126513035618, 1.3860619820229574, -0.8399570884779624, 1.6774283634606264, 0.2466618029367911])
# dip_h_errs  = np.array([0.011249013346166967, 0.018470879973525454, 0.016148052100699334, 0.013524492172046194, 0.01276079064560521, 0.020084205913210907, 0.0074034024367793105, 0.052165902250143496, 0.10283774720849903, 0.04558702564683007, 0.009086823920751455, 0.01604015017585758, 0.021840654351014586, 0.04966515074542645, 0.01915784889573139, 0.018900775936312415, 0.8198604942206532, 0.06599265570249012, 1.7424598350143041])
# dip_width   = np.array([2.526231435064328, 2.858656779571784, 2.560131965931531, 2.808006882882991, 2.719500068284615, 3.403119775188867, 2.1290901506034703, 2.6420827287372886, 5.792500008861034, 4.047752715583713, 2.2633225618878243, 2.667075884195556, 3.4608870379149463, 5.763147238840129, 3.842089116149414, 3.0439859281258177, 6.633236554942086, 5.654668362065209, 15.849444874050501])
# dip_w_errs  = np.array([0.03652326322711723, 0.06381254932736957, 0.04808753707752532, 0.04539940777086126, 0.04131899594983547, 0.08446405324552582, 0.021475395556455952, 0.09817451140808381, 0.8875861482034362, 0.2225671942065614, 0.02715852465668453, 0.053069613053648865, 0.0904777539181306, 0.25213600365895317, 0.08787486666456802, 0.07769907287872987, 1.5822883933005707, 0.4370649789054115, 6.6532892964490555])
# dip_position= np.array([0.19874776806446554, 0.18891367442456505, 0.18331842728618353, 0.16421647913712878, 0.15709015256059589, 0.15442161995705042, 0.19894657759450005, 0.19793100083208748, 0.07520963055345543, 0.08163592149089706, 0.204603517988303, 0.19129566859976382, 0.15019502971846285, 0.13821926533650722, 0.13782193769604445, 0.16242562790743245, 0.17620841705286597, 0.12417296654465484, 0.12001597870221968])
# dip_p_errs  = np.array([0.0016773748911889682, 0.0020587842794537667, 0.0018358448260450894, 0.0013170443183714575, 0.0012244716968635944, 0.0014771155884094533, 0.0013642890031548252, 0.0023479948767280868, 0.0013391994221634241, 0.0012586291318596983, 0.001624546062108222, 0.0020456090882254264, 0.0014604607571580125, 0.0008718171939126275, 0.0009926107631554918, 0.0017425659042636032, 0.014558825200651224, 0.0015289658387263934, 0.004239412753364688])
# Integral    = np.array([4.44801226417168e-11, 4.430386867053441e-11, 3.995710649527463e-11, 3.809020837606024e-11, 3.5798989170183764e-11, 3.885198953167203e-11, 4.004833032157885e-11, 2.8212130473697144e-11, 1.8352835124812812e-11, 2.118703890671391e-11, 4.3284792022362594e-11, 4.361894113252393e-11, 3.785507281587866e-11, 3.812915225677811e-11, 3.5788115406437944e-11, 3.7954379607811283e-11, 2.6217026534866277e-11, 3.461333654133013e-11, 3.381215543360991e-11])
# integral_err= np.array([4.938285629498474e-25, 4.918717507799642e-25, 4.436129962845329e-25, 4.228862635187207e-25, 3.974486203504464e-25, 4.313437333055784e-25, 1.2365451244313992e-24, 3.1321756825627592e-25, 2.0375740122716494e-25, 2.3522338417862787e-25, 6.297888222659428e-25, 4.842675275509737e-25, 4.202757343905035e-25, 4.23318627449133e-25, 3.97327897321697e-25, 4.21378261259556e-25, 2.9106746496217225e-25, 3.8428523187283995e-25, 3.7539033474598318e-25])
# peak_YN     = np.array([1     ,1    , 1  , 1    ,1     , 1    , 1    , 0   , 0    , 0    ,1    , 1    , 1    ,0.5  , 0.5    ,1  ,0    ,0    ,0])

#Spatial 10 With fitted polynomial UD1
# number      =          [ 864  , 865  , 867 , 869  , 871 , 873 , 875,  877  , 879  ,881   , 866 , 868 ,   870 , 872 , 874  , 876 , 878 , 880 , 882]
# file_number =          ['00186', '00187', '00189', '00191', '00193', '00195', '00197', '00203', '00201', '00204', '00188', '00190', '00192', '00194', '00196', '00198', '00200', '00202', '00205']
# distances   = np.array([0    ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62, -1.88, -2.15, -2.43 ,  0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([4.756159837347067, 4.6708848402819205, 4.478738042612212, 4.1774277961647535, 3.6797205964663706, 2.944844306118239, 2.006309097759592, 1.2185639418135032, 0.39260078690055045, 0.19221433524283205, 4.677011146726874, 4.406042958486689, 4.038153966026918, 3.464347350440314, 2.603967666668654, 1.6400824839332393, 0.6980417423264397, -0.17257280077434284, 4.552884068097465])
# dip_h_errs  = np.array([0.017208076379123687, 0.023084805350210885, 0.019680109639954885, 0.025329446884202335, 0.02804517945172982, 0.0225168623225333, 0.016967376118985453, 0.018469060714326, 0.022423928264330765, 0.06239394290941143, 0.021730520810443823, 0.024868018757220296, 0.023670690384909744, 0.01770520306478364, 0.01578257792640679, 0.013701522044781598, 0.014261807565570174, 0.10920795591388202, 0.04472394967721335])
# dip_width   = np.array([1.5113249250494074, 1.4311535192915412, 1.1915474657116756, 1.141260799022402, 1.5638813528239621, 1.3493620280900147, 1.3500237876868075, 1.012310863793873, 1.0890347098145998, 0.773646813775728, 1.5309391720759604, 1.5398849592727293, 1.5881186163711207, 1.81813957751158, 2.434840509555013, 1.970433411203106, 1.856790703381243, -1.9801432374264516, 3.2753394040827435])
# dip_w_errs  = np.array([0.05832850866424814, 0.07800388271105838, 0.06610144097789826, 0.08499512527356175, 0.09511450645395539, 0.07589863263663989, 0.057984374285274955, 0.06349507061764793, 0.08324760235293827, 0.209652577486429, 0.07364804695520102, 0.08428534831360739, 0.08042084602678015, 0.06062582223241283, 0.05592061570002816, 0.049498518827052196, 0.05452236144691435, 0.1037910819716077, 0.16769076479532805])
# dip_position= np.array([0.12113195383398338, 0.10412113961087346, 0.11128986228141256, 0.09146689290660587, 0.07256414817489426, 0.06203620120603726, 0.08523402242662194, 0.08371483388019615, 0.049258196174786516, -0.020822469140381, 0.12277901929695141, 0.1204413543934938, 0.12706397012020085, 0.11492686294338637, 0.11543646192258336, 0.1389264574045563, 0.15095239424540619, 0.1003511657395846, 0.04095643553442815])
# dip_p_errs  = np.array([0.003259058230083584, 0.003967179908795186, 0.004336048131630276, 0.004789154119695882, 0.0030756259792153193, 0.0024435801073541003, 0.0025345919812863565, 0.003615298824910918, 0.002067087475098995, 0.002805853814548593, 0.004118022201270377, 0.00459583383539394, 0.0044766562822420065, 0.002649367116436146, 0.0017789227303097181, 0.002292973024803551, 0.002406533310632115, 0.008738014732064517, 0.001336119786601028])
# Integral    = np.array([1.948527664864093e-11, 1.5860726761464696e-11, 1.411451555592271e-11, 1.1110864597049548e-11, 1.2078731708167486e-11, 8.909895432406126e-12, 1.2244797882343518e-11, 8.999503308765578e-12, 4.579558335670181e-12, -1.2358494704390133e-12, 2.0006752823317918e-11, 1.9740565999361864e-11, 2.147766939032031e-11, 2.2236890438399734e-11, 2.971262024503931e-11, 2.8406055441691767e-11, 2.421696621243434e-11, 8.854659712659408e-12, 1.3809486521260385e-11])
# integral_err= np.array([8.339217102836843e-14, 1.7232059069868923e-13, 1.1982656966508636e-11, 1.402244404940256e-11, 9.063637536141947e-14, 1.1231736217298229e-12, 5.849612229812702e-15, 9.499628770187328e-14, 1.2099662337001113e-17, 1.1781355470079218e-13, 6.32235482550138e-14, 1.443016782338944e-13, 1.085325453532154e-14, 3.502368917247597e-15, 1.4044413126947702e-19, 4.2855412393763874e-18, 1.6555552378862655e-21, 1.1388542966598659e-23, 1.5714716597272221e-21])
# peak_YN     = np.array([1,1,1,1,1,1,1,1,0.5,0,1,1,1,1,1,1,1,0,0])

# #Spatial 10 With fitted polynomial UD2
# number      =          [ 864  , 865  , 867 , 869  , 871 , 873 , 875,  877  , 879  ,881   , 866 , 868 ,   870 , 872 , 874  , 876 , 878 , 880 , 882]
                        #  ["00230","00232","00234","00236","00238","00241","00248","00228","00229","00231","00233","00235","00237","00240","00247"]
# file_number =          ['00230', '00232', '00234', '00236', '00238', '00241', '00244', '00246', '00248', '00228', '00229', '00231', '00233', '00235', '00237', '00240', '00243', '00245', '00247']
# distances   = np.array([0,0.25,-0.50,-0.76,-0.98,-1.24,-1.48,-1.74,-1.97,-2.22,0.22,0.46,0.74,0.97,1.24,1.71,1.96,2.22])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# dip_height  = np.array([4.719965554962802, 4.507577822283234, 4.0937564860201405, 3.6016631790850764, 2.706317987910349, 1.8351725306865632, 1.027764627413779, -0.47647892089970256, 4.576074477783839, 4.71933740312487, 4.722640159701314, 4.447821766922008, 4.202121373020973, 3.8092790556787643, 2.808376887959849, None, 1.2372309109498212, None, 1.798053606765047])
# dip_h_errs  = np.array([0.015380824956984875, 0.009274556159804721, 0.013206239847374507, 0.01183505673775032, 0.01281882612650381, 0.00801321420917531, 0.009005113601934237, 0.27448573420332945, 0.04034174326234065, 0.01082098009604308, 0.012421764335822216, 0.013182073294320714, 0.011686495504858998, 0.02417842542438066, 0.025774050222826212, None, 0.014172760420675772, None, 0.05116283785596114])
# dip_width   = np.array([2.5064633957066293, 2.3244654008784758, 2.6901084765203453, 2.766759876189401, 2.9557856261281685, 2.5585785618201333, 2.4127996451741462, 3.5488965381148088, 4.366689353124247, 2.4638689588480505, 2.4161754939640576, 2.494023043571575, 2.525963260599575, 2.794220427051319, 3.3545389556611225, None, 2.244935711228686, None, 4.272143015184482])
# dip_w_errs  = np.array([0.04338168444569424, 0.02812356015939553, 0.04567368477612331, 0.04184453363758233, 0.04836943872501188, 0.026499126317047317, 0.029625134140438467, 0.40187910872873306, 0.2008996200345685, 0.03452101844659872, 0.03841439359743166, 0.04088366861037282, 0.0368868566777111, 0.07882560414333377, 0.09695506881157652, None, 0.044293523398744566, None, 0.22653097967722927])
# dip_position= np.array([0.19101090818690167, 0.19826653501032881, 0.18525198245291105, 0.17618480392201566, 0.17588469623738684, 0.20098150889266037, 0.2147859033047613, 0.19577487800154394, 0.11657990346857754, 0.18043123639960054, 0.17656969226788977, 0.16689143527860545, 0.1553466644950273, 0.14223229403480858, 0.12669983450034938, None, 0.15613304852581772, None, 0.08516389545846231])
# dip_p_errs  = np.array([0.0017342481376932766, 0.0015318394220468208, 0.0017092344647421762, 0.0013936777738709782, 0.0013782098786227813, 0.0012035142548796013, 0.001312755475184152, 0.012886795612191701, 0.001347560866324575, 0.0015229906076932173, 0.0017028785789859387, 0.0015739391245831202, 0.0012955867437935541, 0.001974827637907202, 0.0013962914168729088, None, 0.0018728062045043346, None, 0.0010747900328333389])
# Integral    = np.array([4.044334651124392e-11, 4.242440559788821e-11, 4.2813782534088386e-11, 4.119247748982684e-11, 4.227805084495355e-11, 4.5371541689127055e-11, 4.2837673612461093e-11, 2.195068735180099e-11, 3.10919797290665e-11, 3.991979079422694e-11, 3.841570255559594e-11, 3.663297286490929e-11, 3.4430756935813966e-11, 3.271717627029221e-11, 3.133726795142074e-11, None, 3.158367229965457e-11, None, 2.1796012083378384e-11])
# integral_err= np.array([4.49011344896765e-25, 4.710055190081187e-25, 4.753284714063931e-25, 4.5732836950559235e-25, 4.693806548434049e-25, 5.037253024600902e-25, 4.755937156593181e-25, 2.437015850431766e-25, 3.4519031776388265e-25, 4.431987087797011e-25, 4.264999748437407e-25, 4.0670769935090884e-25, 3.8225819105412966e-25, 3.6323362395998214e-25, 3.4791356408515318e-25, None, 3.506492018929227e-25, None, 2.419843445997481e-25])
# peak_YN     = np.array([1,1,1,])


# # Spatial 11 ## Unknown Ref
# UD
# number      =          ["00287","00289","00291","00294","00296","00298","00300","00302","00284","00286","00288","00290","00293","00295","00297","00299","00301","00303"]
# file_number =          []
# distances   = np.array([-0.44  ,-0.68  ,-0.92  , -1.17 ,-1.42  ,-1.66  ,-1.89  ,-2.19  ,0      ,0.29,0.56,0.78,1.03,1.28,1.51,1.78,1.98,2.24])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([8.292267185560522, 4.209060705345331, 3.873151422792977, 3.15477439701132, 8.414709273125741, 8.475709220685944, 8.112202235405848, 8.430279501254068,4.84334397535756, 4.788077603692261, 0.4455893345034248, 4.128542234640321, 8.655051619022016, 2.654439672059206, 1.7381083727895241, 0.5314676005600609, 9.974380782085078, 8.30863737267216,])
# dip_h_errs  = np.array([0.032273932802286596, 0.016191263941984817, 0.015063984679703064, 0.026468137451930395, 0.046253020872488324, 0.0189545468726386, 0.04471646665707592, 0.08519578119978814,0.026431941400431515, 0.01855638370368957, 0.01665562478278257, 0.0167958195781363, 0.0271899774215101, 0.01633191036324952, 0.013161016075923307, 0.031187899679534725, 1.7753552518365967, 0.04041745847005961])
# dip_width   = np.array([2.6289940460521213, 2.158778963595822, 2.1298579230090895, 2.3390551001799684, 2.5939552050092036, 2.2631481964378524, 3.948738262110709, 2.831696771350174,2.2748693197349303, 2.235293240264867, 0.4828414294294739, 1.805168817983534, 3.0440716699153763, 1.993377786230161, 2.246900270464055, 2.1275381326112033, 8.223209951407314, 3.623999922813118])
# dip_w_errs  = np.array([0.1328172507224862, 0.056239709733149214, 0.05143807974586877, 0.09379886693379373, 0.1257437245258272, 0.059581106847130944, 0.2812059664983344, 0.2080275194186912,0.08590550432250431, 0.07047947767474935, 0.040005879576747824, 0.05258399124772242, 0.1259748531216104, 0.05494066539163888, 0.0502391132649299, 0.08008283556848994, 2.6789457789154, 0.23296436033406828])
# dip_position= np.array([0.16795573872133765, 0.19669098720002146, 0.1986570998147479, 0.18902475818657563, 0.1702541049336445, 0.18475498908929316, 0.17768863494029724, 0.18898971520705093,0.194487258375066, 0.1930728433508835, 0.4167602026377679, 0.19992632757846096, 0.2133020195492031, 0.21357139510386158, 0.23519615110373238, 0.26077001732812555, 0.22007236308680259, 0.16034389963382994])
# dip_p_errs  = np.array([0.00307642919999648, 0.0024784395891501105, 0.0023552886696381896, 0.003216029956800088, 0.0024105029410143998, 0.0020635373236445216, 0.002305539470299807, 0.0030509771909335206,0.003142035650497058, 0.002879570597796275, 0.02934017332677524, 0.0036027472287003246, 0.002509869919544783, 0.0032152821671600873, 0.002469438275258287, 0.003600524467776364, 0.041816111525112235, 0.0021908628992641376])
# Integral    = np.array([2.297501363923969e-11, 2.5647533419988032e-11, 2.581880855438268e-11, 2.5019872218138376e-11, 2.051859955518261e-11, 2.3646618438846373e-11, 2.5134626687579605e-11, 2.1473758271695058e-11,2.472247884195035e-11, 2.5782723254387467e-11, 2.1063506532757216e-11, 2.536613849003539e-11, 2.956294373649447e-11, 2.750526181326006e-11, 3.1407933806955847e-11, 3.2057538921711864e-11, 2.3594116188203772e-11, 2.27605633463046e-11])
# integral_err= np.array([2.5507389133360912e-25, 2.84744821277139e-25, 2.8664635725464604e-25, 2.777763820975651e-25, 2.278022165922723e-25, 2.625302024533302e-25, 2.7905041263908808e-25, 2.384066085847076e-25,2.7447465236141555e-25, 2.862457299455941e-25, 9.620815285799566e-18, 2.816207099746769e-25, 3.2821460811954213e-25, 3.05369749634244e-25, 3.4869811268385225e-25, 3.5591017823701624e-25, 2.619473103782496e-25, 2.5269301480506767e-25])
# peak_YN     = np.array([1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,0,0])

#LR
# number      =          ["00304","00306","00308","00318","00321","00324","00326","00305","00307","00317","00319","00323","00325",]
# file_number =          []
# distances   = np.array([0,-0.24,-0.49,-0.74,-0.96,-1.22,-1.44,0.25,0.49,0.72,0.99,1.23,1.46])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([0.7730988357523062, 4.762128585019412, 0.8457989152287908, 0.3821080593407505, -0.5, 8.477311868282856, 8.32140814840680,4.849722124804802, 4.570966075343057, 0.5770970013376971,  -0.5, 8.513448637410692, 8.220620243055482])
# dip_h_errs  = np.array([0.13732077512833435, 0.027390871626298854, 0.15995691326502215, 0.011761578046858831, 0.5, 0.02788162588854758, 0.0376779106354694,0.01860194299352959, 0.01764580331936349, 0.03087421388130736,  0.5, 0.03717538166083998, 0.08792517713911928])
# dip_width   = np.array([3.180469093543946, 2.1087024042058617, 3.26229290251501, 0.394552186007487, -0.5, 1.8650668364643783, 2.338379419462548,1.836884092841511, 1.6427391013222787, 1.398499108047625,  -0.5, 2.4103276636531867, 3.0189620050961765])
# dip_w_errs  = np.array([1.0538743651784601, 0.07831437760709656, 1.072799687521852, 0.02806681094444418, 0.5, 0.07894789877099921, 0.14304366989997244,0.058822562582477776, 0.05067824809177808, 0.0844887584515428,  0.5, 0.11001868538028313, 0.2030315448037634])
# dip_position= np.array([0.18366634360454093, 0.19748459649383823, 0.158983593623042, 0.5539364333322255, -0.5, 0.11231299213366655, 0.11356193968813015,0.17228763461412647, 0.16804053725727985, 0.32522651540955316,  -0.5, 0.17840480340684167, 0.157620861986999])
# dip_p_errs  = np.array([0.0060521693734578545, 0.0032922426271798535, 0.009291312374393196, 0.03371193150288141, 0.5, 0.002530604741977728, 0.0030315872579792704,0.0033346049161628684, 0.003420473345677902, 0.010973458357304918,  0.5, 0.0027895655917126757, 0.0025363781345711365])
# Integral    = np.array([])
# integral_err= np.array([])
# peak_YN     = np.array([0,1,0,0,0,0,0,1,1,0.75,0.25,0,0])

#spatial 11 ref: 00275
#UD
# number      =          ["00287","00289","00291","00294","00296","00298","00300","00302","00284","00286","00288","00290","00293","00295","00297","00299","00301","00303"]
# file_number =          []
# distances   = np.array([-0.44  ,-0.68  ,-0.92  , -1.17 ,-1.42  ,-1.66  ,-1.89  ,-2.19  ,0      ,0.29,0.56,0.78,1.03,1.28,1.51,1.78,1.98,2.24])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([8.440092295497408, 4.248550276965358, 3.8312828852006318, 2.870845822015806, 8.381690663952448, 8.355109957351239, 8.26022809885221, 8.692125136089635,4.810469233043113, 4.7863571674375125, 0.44538718728310644, 4.187599266151771, 8.593424970290334, 2.6850555723924017, 1.6999615925913285, 0.40485891195147616, 7.952452555234469, 8.502273500422604])
# dip_h_errs  = np.array([0.029923431815934296, 0.023869682845394154, 0.023716423681076675, 0.10142401544102811, 0.09525148605047278, 0.06131596139691021, 0.0310582636695496, 0.08456003009557007,0.024920530972027892, 0.016925627389179534, 0.014205714524328767, 0.02167820428891046, 0.043354496072960824, 0.01920772496295302, 0.019540785794063587, 0.08815278143198303, 0.2888185815377468, 0.0678314550773042])
# dip_width   = np.array([2.369287316667893, 2.0051827625856347, 2.202421458586256, 2.711041123644273, 2.4548016178960848, 2.4874080352607644, 2.914293507067309, 2.288993417651712,1.7753428474460764, 1.86845635508798, 0.481083068379124, 1.7517051397763632, 2.7067161390728365, 1.7491106899223694, 2.201431316780986, 2.452051792843368, 4.1936447357882445, 3.7276222659266485])
# dip_w_errs  = np.array([0.17970047729065758, 0.10636839417231743, 0.09546527675899097, 0.2765911291993494, 0.21038628892787342, 0.17316846724948426, 0.23000100893942696, 0.1948445672016382,0.07926888423449839, 0.08001286918777716, 0.03410656704356814, 0.0964984032969939, 0.20134042605367902, 0.08217853177037084, 0.10586132129079005, 0.21734260548297077, 0.8032076428074013, 0.6189673907395348])
# dip_position= np.array([0.16985576459402155, 0.19787227625929837, 0.1981866902294301, 0.19791927394723918, 0.17392403359002273, 0.18779200040389804, 0.18057260856154653, 0.1817631595802403,0.20408533028108983, 0.20032035642509677, 0.4174996029914684, 0.20049685010958504, 0.2185106509757079, 0.21834134915196965, 0.235643658076543, 0.2631688982126096, 0.17952265024072747, 0.16003566741910966,])
# dip_p_errs  = np.array([0.0028682233971814197, 0.0030219206775016065, 0.0019998175153093612, 0.003394949863220914, 0.003481013082882153, 0.0023477816919774603, 0.002177464787150974, 0.003515383099929251,0.002931224596418329, 0.002867329166918723, 0.025161884510377, 0.004099888412697963, 0.002604224547110015, 0.0037761038754218212, 0.0028541028574449244, 0.004699464731181641, 0.005105268148603378, 0.002535596392327988])
# Integral    = np.array([2.297501363923969e-11, 2.5647533419988032e-11, 2.581880855438268e-11, 2.5019872218138376e-11, 2.051859955518261e-11, 2.3646618438846373e-11, 2.5134626687579605e-11, 2.1473758271695058e-11,2.472247884195035e-11, 2.5782723254387467e-11, 2.1063506532757216e-11, 2.536613849003539e-11, 2.956294373649447e-11, 2.750526181326006e-11, 3.1407933806955847e-11, 3.2057538921711864e-11, 2.3594116188203772e-11, 2.27605633463046e-11])
# integral_err= np.array([2.5507389133360912e-25, 2.84744821277139e-25, 2.8664635725464604e-25, 2.777763820975651e-25, 2.278022165922723e-25, 2.625302024533302e-25, 2.7905041263908808e-25, 2.384066085847076e-25,2.7447465236141555e-25, 2.862457299455941e-25, 9.620815285799566e-18, 2.816207099746769e-25, 3.2821460811954213e-25, 3.05369749634244e-25, 3.4869811268385225e-25, 3.5591017823701624e-25, 2.619473103782496e-25, 2.5269301480506767e-25])
# peak_YN     = np.array([1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,0,0])

#LR
# number      =          ["00304","00306","00308","00318","00321","00324","00326","00305","00307","00317","00319","00323","00325",]
# file_number =          []
# distances   = np.array([-0.24,-0.49,-0.74,-0.96,-1.22,-1.44,0.25,0.49,0.72,0.99,1.23,1.46])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# dip_height  = np.array([4.833968516560885, 0.630570640349056, 0.3821086384690623, 0.1367746119298581, 8.392432644261858, 8.445784163409185,4.810838716108619, 4.625218815548769, 0.5672092607829106, -0.1809955141953291, 8.653917025358584, 8.522407595122985])
# dip_h_errs  = np.array([ 0.0283651166357988, 0.055834493613760576, 0.011077484468165175, 0.0035888338333209093, 0.080667349948759, 0.030043050154982733,0.028779652898627325, 0.020918315032690597, 0.014309146723093552, 0.1995339597138594, 0.04846706447933907, 0.09311872671311598])
# dip_width   = np.array([ 1.6695567771851927, 1.5468444160999204, 0.3945496721825884, -0.1092702581715543, 2.0069995081832066, 1.9569963749538066,1.9189783791608228, 1.4870487218004271, 1.0609805269903196, 1.411435570724581, 2.0840476030197626, 2.4183902884960022])
# dip_w_errs  = np.array([ 0.07897474558210904, 0.218752099431634, 0.0264345314627064, 0.008453430300021917, 0.2016417985955157, 0.14906565566380622,0.12588111403986438, 0.07313145347839071, 0.04139612538932446, 0.25722615895941225, 0.15211637344562823, 0.24361970891818965])
# dip_position= np.array([ 0.20478532248186745, 0.17607292767387, 0.5539381866299786, 0.2992428023424461, 0.11433912099451492, 0.11741667102664671,0.17239207250793645, 0.17151219421828537, 0.35763409820848335, 0.3450971844570929, 0.17581653847409098, 0.14990707577272203])
# dip_p_errs  = np.array([ 0.0032615405691772677, 0.01048669731367979, 0.03174869005491269, 0.02004499911230116, 0.0028347130815557496, 0.00277096408928129,0.003522137163113469, 0.0038656394545183797, 0.00897661966429169, 0.04580174341512897, 0.003069615075064225, 0.0029237031081776007])
# Integral    = np.array([ 2.371473020038921e-11, 2.0821220431388805e-11, 2.3000353333092548e-11, 3.4747945111974278e-12, 1.3473671497814824e-11, 1.5288319700452005e-11,2.2141280128625638e-11, 2.0254626161719347e-11, 3.4883373520706785e-11, 1.808520381910772e-11, 2.1952620921261282e-11, 1.849232937903736e-11])
# integral_err= np.array([ 2.6328639491245654e-25, 2.3116198323723587e-25, 7.170228524092692e-15, 5.855492597548061e-14, 1.4958780323109738e-25, 1.6973444539272193e-25,2.458175899347563e-25, 2.248715231991588e-25, 3.8728324459288185e-25, 2.0078609685012206e-25, 2.437230519765219e-25, 2.0530609855559499e-25])
# peak_YN     = np.array([1,0,0,0,0,0,1,1,0.75,0.25,0,0])


#Spatial 12 LR #Deleted last point for errors ref: 349 (after charging) 
# number      =          ["00350","00352","00354","00356","00358","00360","00362","00364","00366","00368",'00351', '00353', '00355', '00357', '00359', '00361', '00363', '00365', '00367']
# file_number =          []
# distances   = np.array([0,-0.25,-0.50,-0.75,-1.00,-1.25,-1.50,-1.75,-2.00,-2.25,0.25,0.50,0.75,1.00,1.25,1.50,1.75,2.00])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# dip_height  = np.array([4.6829602451227625, 4.511978832357403, 4.272094459819859, 3.8304092298607038, 3.074751943043836, 2.2437032863489854, 1.2969695566237744, 0.21174845988088214, 6.452751775984957, -0.8730971332580428,4.610385603190859, 4.510300055604273, 4.210317018710256, 3.745300779620905, 9.647389171546836, 9.162115417786053, 1.4190729556460129, 0.4931433483396877])
# dip_h_errs  = np.array([0.00863327233924809, 0.008635157198894355, 0.009363002826524735, 0.010466892455946855, 0.010740989107973026, 0.00952506258676647, 0.010539564648467644, 0.05033120306786694, 0.04412530073274304, 1.28750921955745,0.010841825551987594, 0.011107580658739033, 0.012649630276548796, 0.02397766707862733, 0.19426096617947783, 0.039736781716294946, 0.016943665148148723, 0.039312540851265405])
# dip_width   = np.array([1.7746461063105479, 1.8915735846286137, 1.7624330193382505, 2.0809748679161335, 2.0970287993028833, 1.9342467732960085, 1.9369584386492333, 1.9496413305952722, 3.6591537335356046, 5.654813758593542,1.8455820240623426, 1.7779803052961223, 1.967171601629192, 2.4157559022648316, 4.255103590027883, 3.0951485200103726, 2.1402988122089597, 1.9577019336561496])
# dip_w_errs  = np.array([0.026727560887874327, 0.0281918126704827, 0.028740298029228232, 0.0371703979955463, 0.03512249043337468, 0.0316014355271686, 0.03066924182335893, 0.09869096524676721, 0.272765789190586, 2.44245785996612,0.034498000168445515, 0.03443133507666784, 0.04274085906531959, 0.0950154779261999, 1.053398137496108, 0.2848829373468851, 0.05695477305952968, 0.11635096958835921])
# dip_position= np.array([0.24967615767482343, 0.2498727298941038, 0.2413550751493367, 0.2606654777466315, 0.22956255496541397, 0.24458499227365793, 0.2650869472005747, 0.3005467463391004, 0.1160038846888007, 0.1769013018165118,0.2327329662927826, 0.22920078693783205, 0.19206674922170894, 0.1552901603732459, 0.13572858466295704, 0.1493331248320371, 0.1444774338604971, 0.1639816123493257])
# dip_p_errs  = np.array([0.002376480781686697, 0.0021896398949500487, 0.0024968413309079673, 0.0024282975394231644, 0.0018934664074734897, 0.0022824772626719872, 0.002167099094041982, 0.004864450413151645, 0.0018280149299945568, 0.02804306577992475,0.002620887497045695, 0.0027985999314360634, 0.0023401719895411927, 0.002552688063209286, 0.0020793696984032464, 0.001846644206501366, 0.001856521731624231, 0.0031876809495877774])
# Intergral   = np.array([3.3323296123673716e-11, 3.4864424637130203e-11, 3.211836081041793e-11, 3.847004134864455e-11, 3.2044515920925026e-11, 3.121908223027373e-11, 3.0003792215680835e-11, 2.1634214891040714e-11, 1.3287489665479165e-11, 1.2347845450711895e-11,3.1462080435262774e-11, 3.019083165674041e-11, 2.5830319272269106e-11, 1.9004692234294588e-11, 1.5556267487423652e-11, 2.1737553639253362e-11, 1.7592551335076736e-11, 2.3898843174368834e-11])
# integral_err= np.array([1.2681194056100776e-24, 3.870728697245052e-25, 1.7924854087312454e-24, 4.271032566354699e-25, 4.812748772163335e-25, 3.7258792543908307e-25, 5.945850571171485e-24, 2.4018803491721822e-25, 1.4752076966083789e-25, 1.370886232389334e-25,6.71694645117769e-25, 2.6945548125395986e-24, 2.867741518949208e-25, 2.1099446894428763e-25, 1.7270926341765472e-25, 2.4133532549323446e-25, 1.953165555410223e-25, 2.6533045954090045e-25])
# peak_YN     = np.array([1,1,1,1,1,1,1,0.5,0,0,1,1,1,1,0,0,1,0])

#UD ref: 00344 Removed the 384 point as None
# number      =          ['00370', '00372', '00374', '00376', '00378', '00380', '00382', '00386','00369', '00371', '00373', '00375', '00377', '00379', '00381', '00383', '00385', '00387']
# file_number =          []
# distances   = np.array([-0.25,-0.5,-0.75,-1,-1.25,-1.5,-1.75,-2.25,0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01, ])
# dip_height  = np.array([4.529607706860395, 4.1868568111826105, 3.7181890847212555, 3.057158134418413, 2.275438312895593, 1.3685527440870466, 9.618991378832803, 9.512549717429463,4.673635412267969, 4.583139809657106, 4.533481277617294, 4.230949030663571, 3.9325354395268977, 3.2375979693656123, 9.308518173066876, 1.5815288706361201, 0.49731127032709194, 9.653822962584298])
# dip_h_errs  = np.array([0.01288750528787403, 0.013662534937809927, 0.031165030743301573, 0.007313436643431122, 0.014410311571772243, 0.012813828025430714, 0.06303852690956765, 0.03763758800711705,0.00994237266130071, 0.056607694176348394, 0.007771541704377697, 0.03133654630508589, 0.018994935195691703, 0.012031143697771095, 0.04244309347859296, 0.020112207424399627, 0.01729366047632984, 0.056965335011015944])
# dip_width   = np.array([1.3668752943937499, 1.3676495213175006, 1.7278029863812636, 1.1876680844715872, 1.1507043715698664, 0.8169911853886391, 1.9886209055370154, 1.529802186427486,1.4666702405388556, 2.018413910263775, 1.4738654158022764, 1.6674823461921338, 1.5813128794765898, 1.6192000116271914, 2.289715832753511, 1.5822799997618229, 1.3442952148408838, 2.3631861624524557])
# dip_w_errs  = np.array([0.04254077579406269, 0.047863323319916405, 0.0897192957748858, 0.02268276596375286, 0.04315082808964206, 0.032893741960817964, 0.365978502380539, 0.1778619638343376,0.03703413625128305, 0.11073115634685203, 0.027889923724872295, 0.07324034690876763, 0.053710567485808894, 0.04803512338115939, 0.2420261228657577, 0.07645379271110384, 0.07623113086467473, 0.29687982575427446])
# dip_position= np.array([0.19625161144184652, 0.18229669156782152, 0.14366329389908453, 0.15422273616590387, 0.1258438718618126, 0.11796283449286321, 0.09083400423990887, 0.07634290808971742,0.21908003479933325, 0.2035105909572309, 0.20709017142126204, 0.19217774497669465, 0.1773531309313322, 0.17302633042205764, 0.15389118483829042, 0.17579651377417338, 0.14127542909252408, 0.1429559410615282])
# dip_p_errs  = np.array([0.00314159525842238, 0.0033887090220109444, 0.0024087542240158978, 0.0018509375840987956, 0.003022321352683778, 0.003685457480378367, 0.0024387032734904243,  0.002618760272305668,0.002670560582632758, 0.0033299249981054396, 0.0018456236996989412, 0.002659177377217748, 0.002233565152603641, 0.0021296789405437066, 0.0020411686010717626, 0.0036104413161939927, 0.0028414906640207515, 0.0020638211520701264])
# Integral   = np.array([2.239535187074984e-11, 2.1108838282623362e-11, 1.692983034859764e-11, 1.668136534621184e-11, 1.3294852930514326e-11, 9.658791842375108e-12, 8.504056294213134e-12,  7.586646991963946e-12,2.609072972843705e-11, 2.199223775330683e-11, 2.4524934400258437e-11, 2.1072286879419662e-11, 2.0298371472861342e-11, 2.1282706493573154e-11, 1.5560851052950664e-11, 2.1367497354906458e-11, 1.3395165465618477e-11, 1.4423469463754325e-11])
# integral_err= np.array([2.4863835291488546e-25, 2.3435518284457405e-25, 1.8795887456010838e-25, 1.8520035889548582e-25, 1.4760251832462242e-25, 4.5043045376263055e-22, 9.441399100543905e-26,  8.422870170181558e-26,2.896652887378287e-25, 2.4416288716751866e-25, 2.722814684858847e-25, 2.3394938075038297e-25, 2.2535719371565112e-25, 2.3628550775504246e-25, 1.7276015121748439e-25, 2.372268754203428e-25, 1.4871621118593388e-25, 1.601326789363791e-25])
# peak_YN     = np.array([1,1,0.5,1,1,1,0,0,1,0.5,1,1,1,1,0,1,1,0])

#spatial 13 LR ref: 400
#Needs distances and peak Y/N
# number      =          []
# file_number =          ['00423', '00425', '00427', '00429', '00431', '00433', '00435', '00437', '00441','00426', '00428', '00430', '00432', '00434', '00436', '00438', '00440']
# distances   = np.array([])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01, ])
# dip_height  = np.array([5.6000064099264595, 5.768861753618926, 5.364673390669676, 4.757678328449358, 4.033356908450779, 3.313274817587928, 2.191179078197315, 0.6100783765468821, 7.53165308778355,8.034260143580147, 5.264010230654592, 5.00503502200944, 4.604482992191193, 3.965237878412299, 9.723799447048332, 6.36790747575263, 4.421459126870233])
# dip_h_errs  = np.array([0.04686146698583657, 0.016908777646976094, 0.014424320245204174, 0.03430438999130777, 0.09595008883851597, 0.030841069073047886, 0.02149669750567436, 0.11030377684799617, 0.09269213099533588,0.08255047615955516, 0.06659236354867765, 0.020049615213845604, 0.05246283399708692, 0.03642994280457813, 0.020380198338937967, 0.024517238649883227, 0.21714711781971732])
# dip_width   = np.array([2.425043861313479, 1.8868955910899847, 1.6350154789735776, 2.2309289355465194, 2.5293472584657204, 1.819509962977715, 1.5341135448922298, 2.6208883952226936, 2.0729317250772086,3.7360128218149384, 2.3635184157617046, 2.1195582169506952, 2.585441328630375, 2.169327012618609, 1.580940949312525, 1.6145440793991421, 3.257192055704005])
# dip_w_errs  = np.array([0.16286446560544532, 0.08103302677362939, 0.059815099334448334, 0.15042388793982198, 0.23393333414393336, 0.14256722280287656, 0.08195990648516216, 0.416106727802154, 0.36469443529666384,0.7907240587648287, 0.21139875325889912, 0.10777243546629346, 0.2538363980752864, 0.10304671145248052, 0.12829659722641532, 0.09719927112250992, 0.430996569580933])
# dip_position= np.array([0.1605444543559704, 0.14513233959696323, 0.14255597172626341, 0.1372835036104114, 0.12345730092943498, 0.11606662096357413, 0.1272671360484864, 0.13054855156091455, 0.05678872109088799,0.10703402943023639, 0.1471261438055597, 0.15345201535276182, 0.15654871689179367, 0.17127464742023582, 0.17822343370128968, 0.18018405537684384, 0.19127254352502762])
# dip_p_errs  = np.array([0.0019967717485741047, 0.002051985282835537, 0.0021520393616461624, 0.0021550502726269613, 0.0022846606155078946, 0.0031770392322673174, 0.003057744086437341, 0.003366113826314231, 0.002599736469457449,0.002168190416108813, 0.00251713926606699, 0.0021115589047918325, 0.002733758574505611, 0.0017815438009355258, 0.0018073617777183036, 0.004513350524040872, 0.0074992438024090715])
# Integral   = np.array([2.0840052547013172e-11, 1.873213299441565e-11, 1.765450877678093e-11, 1.8062386975417548e-11, 1.5063552342198838e-11, 1.4839953979938143e-11, 1.5369270233422853e-11, 1.7277868070215302e-11, 7.310824239722007e-12,1.523680195052752e-11, 1.8781402765991882e-11, 2.033411936849242e-11, 2.1137470232263767e-11, 2.1116807482150266e-11, 1.2227856384396573e-11, 2.2128806485068512e-11, 2.253476261161228e-11])
# integral_err= np.array([2.313710617209216e-25, 2.079684535074083e-25, 1.9600442132429097e-25, 2.0053277899798104e-25, 1.6723902642955355e-25, 1.6475658592905055e-25, 1.7063317684832105e-25, 1.918228694798885e-25, 8.116645399927078e-26,1.6916248347129148e-25, 2.085154578556279e-25, 2.2575407508376633e-25, 2.346730613418809e-25, 2.3444365873260005e-25, 1.3575647699766794e-25, 2.4567910467197545e-25, 2.5018612305874075e-25])
# peak_YN     = np.array([])
# number      =          []

#spatial 13 UD ref: 400
#Needs distances and peak Y/N
# file_number =          ['00401', '00403', '00405', '00407', '00409', '00411', '00413', '00415', '00417', '00419', '00421','00404', '00406', '00408', '00410', '00412', '00414', '00416', '00418', '00420', '00422']
# distances   = np.array([])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01, ])
# dip_height  = np.array([5.817513826881952, 5.617362146353023, 5.294684379159621, 4.707572938031558, 4.120200644957842, 3.6390489929126204, 2.617970017703541, 1.720416991466125, 1.5228035906429478, -270.41071880231243, -9.737496515620036,5.89179238763005, 6.0141512206054095, None, 4.938770238821531, 3.966458241535319, 9.353168046433122, 6.16556902993942, 6.119588650830095, 4.901913629176165, 3.8197146386751735])
# dip_h_errs  = np.array([0.017127022424819626, 0.021081205254610866, 0.0225089624979705, 0.04561988161861873, 0.021157184738896613, 0.026514391017691694, 0.027712402097743862, 0.02429392200447611, 0.030970375933781474, 2055695.6034098023, 248.0040595449927,0.07564634276446332, 0.29236025701864016, None, 0.09273255070718378, 0.44161122038706185, 0.7148464426945238, 0.016868403304784816, 0.014195933694332924, 0.020828691781998424, 0.01913581348459287])
# dip_width   = np.array([1.904386942607835, 1.9060907606267787, 2.0696441112514536, 2.191507030323326, 1.7875682842295255, 2.0691045853629677, 1.3352409577507067, 1.3990996178476147, 1.0209815296190128, 354.969315455585, 18.914499719523665,2.5896051377722826, 3.6589092087814934, None, 2.561979750555722, 4.055608043490845, 4.387807547422096, 1.6944412086501115, 1.5626045915853044, 1.6614810988543731, 1.6863543321754126])
# dip_w_errs  = np.array([0.0751625970685785, 0.08377983456425898, 0.10857801134757662, 0.16527405715687085, 0.08502517583793265, 0.13317016691008102, 0.09510535601623138, 0.08700866657013334, 0.07774064857023122, 1321713.8466640357, 130.41735335923818,0.24661168281188414, 0.7799285366530627, None, 0.2718991800196373, 1.0001601702940333, 5.272917781656819, 0.0723076012633915, 0.055164056786051165, 0.08434709802788724, 0.08201714575522298])
# dip_position= np.array([0.16782772237039448, 0.15302886891711184, 0.15613365473321522, 0.13507722878247308, 0.13716685401002818, 0.12531215925137634, 0.1189489002151959, 0.0958319815521981, 0.10773045991583717, 0.2824374090678223, 0.847284545614439,0.13726913024558796, 0.1474163129478065, None, 0.13794806520993808, 0.14779912939019746, 0.13839493814850315, 0.1832776811796795, 0.1972527622055911, 0.19014903783057566, 0.191927336135465])
# dip_p_errs  = np.array([0.002095027755465848, 0.002061499128907277, 0.002264954254877823, 0.0023165043641687477, 0.002263227178068955, 0.0022527400697768094, 0.004643770546239459, 0.0030744138047354543, 0.004481623988779524, 3527.2201525046808, 29.277957387651238,0.0021402742199450905, 0.005005625084461819, None, 0.002490896095635419, 0.008449673689898336, 0.0036099678197697342, 0.0030538724432748027, 0.003051658502410379, 0.0038398686896039098, 0.0036768487989751572])
# Integral   = np.array([2.1532844832013175e-11, 1.9437056136532115e-11, 2.0469714131236548e-11, 1.7374050281426996e-11, 1.7232847783292597e-11, 1.6475126972986416e-11, 1.363216730596292e-11, 1.1207750006082186e-11, 9.391493869414225e-12, 7.787436630958123e-12, 1.012933920944321e-11,1.7807793843022734e-11, 1.9063698373548298e-11, None, 1.7563457552381918e-11, 1.8489973982069044e-11, 9.856703984027012e-12, 2.2949045426401483e-11, 2.398677226645141e-11, 2.355871593552585e-11, 2.4008939895014616e-11])
# integral_err= np.array([2.390626011818184e-25, 2.1579467253709645e-25, 2.272594793599375e-25, 1.9289070653435432e-25, 1.913230438887203e-25, 1.8291065299032478e-25, 1.5134746018622325e-25, 1.2443102110995182e-25, 1.2439064206273414e-24, 8.645791450499066e-26, 1.1245825614562233e-25,1.977062274230194e-25, 2.116495686882247e-25, None, 1.9499354966681e-25, 2.0527994839613144e-25, 1.09431397099813e-25, 2.547855862555957e-25, 2.6630666856654504e-25, 2.615542886222438e-25, 2.6655277868286717e-25])
# peak_YN     = np.array([])

### NEW DATA SETS IN NEW FORM ###


#1: Spatital 7 DU:
# distances   = np.array([-0.31,-0.60,-0.96,-1.31,-1.64,0.34,-0.68,1.05,1.34,1.66])
# d_errors    = np.array([0.01 , 0.01, 0.01, 0.01, 0.01,0.01 , 0.01, 0.01, 0.01, 0.01])
# peak_YN     = np.array([1,0,0,0,0,1,1,1,1,1])
#LR '00047', '00048', '00049', '00051', '00052', '00053', '00055', '00056', '00057', '00061', '00058'
# distances   = np.array([0,-0.36,-0.70,-1.02,-1.34,-1.68,0.30,0.63,0.96,1.30,1.65])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# peak_YN     = np.array([1,1,0,1,1,0,1,1,1,1,0])

#2: spatial 9 UD:
# number      =          ["00119","000111","000112","000113","000114","000115","000116","000117","000118",]
# distances   = np.array([0,-0.05,-0.23,-0.44,-0.64,0.19,0.40,0.61,0.81])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# peak_YN     = np.array([1,0.5,0,1,1,1,0,1,0])
#LR
# number      =          ['00131', '00120', '00121', '00122', '00123', '00124', '00125', '00126', '00127', '00128', '00129', '00130']
# distances   = np.array([0,0.17,0.33,0.51,0.72,0.93,1.15,1.36,-0.4,-0.6,-0.81,-1.02])
# d_errors    = np.array([0,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,])
# peak_YN     = np.array([1,1,1,0,0,0,0,0,0,0,0,0])

#3: Spatial 10 LR ref: 400
# distances   = np.array([0    ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62, -1.88, -2.15, -2.43 ,  0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43])
# d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
# peak_YN     = np.array([1,1,1,1,1,1,1,0.5,0,0,1,1,1,1,1,1,0,0,0,])
# UD1
# distances   = np.array([  0    ,-0.25 , -0.50, -0.75, -0.99, -1.24, -1.48, -1.73, -1.95, -2.16 ,0.25  , 0.47, 0.74, 0.98, 1.24,1.48 , 1.72, 2.18  ])
# d_errors    = np.array([ 0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0    , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,0.01])
# peak_YN     = np.array([1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0])
#UD2
distances   = np.array([0,0.25,0.50,0.76,0.98,1.24,1.48,1.74,2.22,-0.22,-0.46,-0.74,-0.97,-1.24,-2.22])
d_errors    = np.array([0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0   , 0.01,   0.01, 0.01, 0.01 , 0.01, 0.01,0.01 ,0.01])
peak_YN    = np.array([1,1,1,1,0,0,0,1,1,1,1,0,1,1,0])

#4.5: Spatial 11 UD:
# numbers = ['00284', '00285', '00287', '00289', '00291', '00294', '00296', '00298', '00300', '00302', '00286', '00288', '00290', '00293', '00295', '00297', '00299', '00301', '00303']
# distances   = np.array([0,-0.22,-0.44,-0.68,-0.92,-1.17,-1.42,-1.66,-1.89,-2.14,0.29,0.55,0.79,1.03,1.27,1.50,1.77,1.98,2.24])
# d_errors    = np.array([ 0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0    , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,0.01])
# peak_YN     = np.array([0.5,0,1,1,1,1,0,0,0,0,1,0,1,0,1,1,1,0,0])
# LR
# numbers = []
# distances   = np.array([0,-0.24,-0.48,-0.73,-0.95,-1.22,-1.44,0.25,0.49,0.73,0.99,1.23,1.46])
# d_errors    = np.array([ 0.01  , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0.01 , 0    , 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,0.01])
# peak_YN     = np.array([0,1,0,0,0,0.5,0,1,0,1,0,0,0])

# 4: spatial 12 LR
# distances   = np.array([0,-0.25,-0.50,-0.75,-1.00,-1.25,-1.50,-1.75,-2.00,-2.25,0.25,0.50,0.75,1.00,1.25,1.50,1.75,2.00])
# d_errors    = np.array([0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01])
# peak_YN = np.array([1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0])
# UD
# ["00370","00372","00374","00376","00378","00380","00382","00384","00386","00369","00371","00373","00375","00377","00379","00381","00383","00385","00387",]
# distances   = np.array([-0.25,-0.5,-0.75,-1,-1.25,-1.5,-1.75,-2.25,0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01, ])
# peak_YN = np.array([1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0])

#5 spatial 13 LR
# file_number =          ['00423', '00425', '00427', '00429', '00431', '00433', '00435', '00437', '00441','00426', '00428', '00430', '00432', '00434', '00436', '00438', '00440']
# distances   = np.array([-0.24,-0.48,-0.74,-0.98,-1.22,-1.45,-1.70,-1.95,-2.19,-2.44,0.25,0.50,0.73,0.96,1.22,1.46,1.65,1.95])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01, ])
# peak_YN = np.array([1,1,1,0,1,1,1,1,0,0,0,0.5,1,1,1,0,0,0])
#UD
# file_number =    ['00401', '00403', '00405', '00407', '00409', '00411', '00413', '00415', '00417', '00419', '00421', '00404', '00406', '00408', '00410', '00412', '00414', '00416', '00418', '00420', '00422']
# distances   = np.array([0,-0.24,-0.49,-0.74,-0.99,-1.21,-1.46,-1.69,-1.93,-2.18,0.27,0.51,0.74,1.00,1.24,1.49,1.73,1.96,2.21])
# d_errors    = np.array([0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01, 0.01, 0.01,0.01,0.01 ])
# peak_YN = np.array([1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0])

# 6: BPA1 LR ref: 546
# distances = np.linspace(-2,2,2)
# d_errors    = np.zeros(21)
# peak_YN = np.array([0,0,1,1,1,0,1,1,0,1,1,1,0,0,1,1,0,0,0,0,1])
#UD 
# distances = np.linspace(-2,2,20)
# d_errors    = np.zeros(20)
# peak_YN = np.array([0,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,0])

# 7: BPA2
# UD
# distances = np.linspace(-2,2,20)
# distances = np.insert(distances, 0, 0)
# d_errors    = np.zeros(20)
# peak_YN = np.array([1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0])
# # LR
# distances = np.linspace(-2,2,20)
# d_errors    = np.zeros(20)
# peak_YN = np.array([0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0])

# # BPA3
# distances = np.linspace(-1.5,1.5,40)
# d_errors    = np.zeros(40)
# peak_YN = np.array([1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1])
# LR
# distances = np.linspace(-1.5,1.5,40)
# d_errors    = np.zeros(40)
# peak_YN = np.array([0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1])


# Open the file
with open('data.txt', 'r') as file:
    # Read the contents of the file
    contents = file.read()
print(contents.split('\n')[0])

contents = '\n'.join(contents.split('\n')[1:])

data_dict = {}
# Parse the contents
for line in contents.split('\n'):
    if line.strip():  # Skip empty lines
        key, value = line.split(':', 1)
        key = key.strip()
        value = value.strip()
        # Convert the value to a numpy array if possible
        try:
            data_dict[key] = np.array(eval(value))
        except:
            data_dict[key] = eval(value)
print(data_dict)
# Extract the arrays from the dictionary
numbers = data_dict.get('Numbers', np.array([]))
as_values = data_dict.get('As', np.array([]))
errors_on_as = data_dict.get('Errors on As', np.array([]))
fwhms = data_dict.get('FWHMS', np.array([]))
errors_on_fwhms = data_dict.get('Errors on FWHMS', np.array([]))
centers = data_dict.get('Centers', np.array([]))
errors_on_centers = data_dict.get('Errors on Centers', np.array([]))
integrals = data_dict.get('Integrals', np.array([]))
integral_errors = data_dict.get('Integral Errors', np.array([]))

# Now you can use these arrays in your analysis

print("D: ", len(distances)," P: ",len(peak_YN),len(numbers),len(as_values),len(errors_on_as),len(fwhms),len(errors_on_fwhms),len(centers),len(errors_on_centers),len(integrals),len(integral_errors))

plt.scatter(distances, peak_YN, color='red', label='visable Peak or not')
plt.show()


fig, axes = plt.subplots(nrows=2, ncols=2, sharex=True) # Unpack the axes
(axPosition, axWidth, axDepth, axIntegral) = axes.flatten()

distances_new = []
d_errors_new = []
as_values_new = []
a_errors_new = []
centers_new = []
centers_errors_new = []
fwhms_new = []
fwhm_errors_new = []
Integral_new = []
integral_err_new = []
numbers_new = []
peak_YN_new = []

for i in range(len(distances)):
    if peak_YN[i] == 1:
        numbers_new.append(numbers[i])
        distances_new.append(distances[i])
        as_values_new.append(as_values[i])
        centers_new.append(centers[i])
        fwhms_new.append(fwhms[i])
        Integral_new.append(integrals[i])
        peak_YN_new.append(peak_YN[i])

        d_errors_new.append(d_errors[i])
        a_errors_new.append(errors_on_as[i])
        centers_errors_new.append(errors_on_centers[i])
        fwhm_errors_new.append(errors_on_fwhms[i])
        integral_err_new.append(integral_errors[i])



distances = np.array(distances_new)
dip_height = np.array(as_values_new)
dip_position = np.array(centers_new)
dip_width = np.array(fwhms_new)
Integral = np.array(Integral_new)
numbers_new = np.array(numbers_new)

d_errors = np.array(d_errors_new)
dip_h_errs = np.array(a_errors_new)
dip_p_errs = np.array(centers_errors_new)
dip_w_errs = np.array(fwhm_errors_new)
integral_err = np.array(integral_err_new)


### DF/DZ curves

print(len(distances),len(dip_height),len(dip_position),len(dip_width), len(Integral),len(peak_YN))



axPosition.errorbar(distances, dip_height, xerr=d_errors, yerr=dip_h_errs, color= 'blue', fmt='o', label='Dip position')
axWidth.errorbar(distances, dip_width, xerr=d_errors, yerr=dip_w_errs, color= 'orange', fmt='o', label='Dip width')
axDepth.errorbar(distances, dip_position, xerr=d_errors, yerr=dip_p_errs, color= 'green', fmt='o', label='Dip depth')
axIntegral.errorbar(distances, Integral, xerr=d_errors, yerr=integral_err, color= 'purple', fmt='o', label='Integral')




plt.xlabel('Distance (nm)')
# axPosition.ylabel('Dip position ("Dip height" (nm) ')
# axWidth.ylabel('Dip width (FWHM) (nm)')
# axDepth.ylabel('Dip depth (Hz)')
# axIntegral.ylabel('Integral under Curve')

# plt.xlim(-155,155)

axPosition.legend()
axWidth.legend()
axDepth.legend()
axIntegral.legend()
plt.legend()
plt.xlim(-2,2)
plt.title('dF/dZ Curve analysis graphs')
plt.show()
