import numpy as np
import matplotlib.pyplot as plt

# distances   = np.array([  0    ,-0.25 , -0.50, -0.75, -0.99, -1.24, -1.48, -1.73,0.25  , 0.47, 0.74, 0.98, 1.24,1.48])
# distances   =   np.array([  0    ,-0.25 , -0.50, -0.75, -0.99, -1.24, -1.48, -1.73,0.25  , 0.47, 0.74, 0.98, 1.24,1.48 , 1.72,  ])
# As          =   np.array([4.840749661348753,4.8311979841225945,4.524872374333524,4.316992192752874,3.773436740533677,3.001547744454657,2.0760673674358836,1.1706200036398995,4.757056432752436,4.509072397315682,4.0988898518235795,3.5546026119901857,2.7724678820620303,1.888420310525084,1.0850950670371302])
# FWHMs       =   np.array([1.2121690922748902,1.2278030768252932,1.1733381487162529,1.3793701885578518,1.3753096070727346,1.2851676048620746,1.3281619323996945,1.1165911875660015,1.3033289205176959,1.337187088099104,1.295253693544649,1.3664499223877324,1.4181721293611154,1.2905362559645737,1.0047863666108967])
# depths      =   np.array([0.08097903396946592,0.06082689548878833,0.0854413800610783,0.08907145075372604,0.044472399652258986,0.07975935422234794,0.08661539198278136,0.06764594432124361,0.09414805558947037,0.09494566808798721,0.08941454391630135,0.09637127389764394,0.08178052017585981,0.09871887980226055,0.036586487944421486])
# integral    =   np.array([131.26115201323472,79.80035736982555,134.0783518583964,164.2156021053571,81.71522995851164,137.06320536406218,153.76296397790168,81.39948536055881,163.93517597367517,123.28640813737772,176.76953140119093,108.12748014456584,98.65803295561729,180.51037078359317,42.486028207286886])

# files =                ["00208","00209","00211","00213","00215","00217","00219","00221","00223","00225","00210","00212","00214","00216","00218","00220","00222","00224","00226",] #left -> right
# distances   = np.array([0      ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62,  0.25,0.53 ,  0.80 ,1.35  ,1.62 ])
# As   =   np.array([4.880150045115184,4.730501598996693,4.596533458042004,4.1300328550120655,3.5949779026170954,2.6319800290096507,1.4182102635591658,4.746762503052208,4.430540472330571,3.9985561131996064,2.1052761103701623,1.1812123995031103])        
# FWHMs       =   np.array([1.3710649977556046,1.3015168220951805,1.3581647036696314,1.2580280958594827,1.3502349471350177,1.458158502473533,1.4458378264424376,1.3272961868703639,1.2218333318509813,1.1507208840546987,1.5358587722588104,0.8130104066978392])
# depths      =   np.array([0.09734618074969126,0.08262899659418164,0.08940442871088851,0.067024278439958,0.06563707860502799,0.08211921437485795,0.10396215924419412,0.12676330785630727,0.0906099553120542,0.04471697844206448,0.050588795446926405,0.03158288883553183])
# integral    =   np.array([94.92929889752364,76.49016707473554,86.36440463671488,59.97162270476015,63.03502579924135,98.31950342909371,153.554427821656,119.66984386482522,78.74286260617227,36.59871137911523,71.17729732040901,27.024386469739785])


distances_U   = np.array([0,0.25 , 0.50, 0.75, 0.99, 1.24, 1.48, 1.73])
distances_D   = np.array([0.25  , 0.47, 0.74, 0.98, 1.24,1.48 , 1.72 ])

Positions_U = np.array([4.896111212409308, 4.775720055646631, 4.512749431824945, 4.334490192433576, 3.833981274460744, 3.015153428929862, 2.1161991752321385, 1.3171460703621567])
FWHMs_U = np.array([1.4210770391721639, 1.4357791088568945, 1.1245078699219355, 1.1936531595579083, 1.6947887815997775, 1.187595151133195, 1.120468141299502, 1.0482175505626417])
depths_U = np.array([0.09272312726484806, 0.0747471193986765, 0.08065057745656325, 0.07435826982073238, 0.06712648502932546, 0.0726009752200355, 0.06129235910749309, 0.058077787202085056])
Integrals_U = np.array([176.02623924461147, 142.28746215209227, 121.29763702790022, 118.70432756445334, 150.8337817157872, 115.31159715597443, 91.85064061641825, 102.59042959285851])

Positions_D = np.array([4.66472559876295, 4.535106220261021, 4.094100056822242, 3.5526327782362817, 2.8602366969391095, 1.888420310525084, 0.8847658656969768])
FWHMs_D = np.array([1.8121475121706883, 1.1317692902675276, 1.3598151589425613, 1.6248668534547888, 1.4338150928210591, 1.2905362559645737, 1.2201084787511636])
depths_D = np.array([0.14715868423545975, 0.07565295650877936, 0.09712947816266884, 0.1363488207099752, 0.08771260642258417, 0.09871887980226055, 0.12333960709132337])
Integrals_D = np.array([352.2611983939968, 114.49925038883818, 176.39079290420838, 295.00976361038016, 167.95658843318125, 180.51037078359317, 270.7729841826159])


# 0    ,-0.26 ,-0.55, -0.82, -1.07, -1.35, -1.62, -1.88, -2.15, -2.43 ,  0.25,0.53 ,  0.80 ,1.08 ,1.35  ,1.62 ,1.88 ,2.15 , 2.43
distances_L  = np.array([0,0.26,0.55,0.82,1.07,1.35,1.62])
distances_R   = np.array([ 0.25,0.53,0.80,1.08,1.35,1.62])

#delete last 3
Positions_L = np.array([4.8716523561318645, 4.667646963917479, 4.5609124579363565, 4.119594265137365, 3.5948728617883883, 2.5478342770988083, 1.3988837679082635])
FWHMs_L = np.array([1.6804044139229484, 1.4462380669593151, 1.3037919964548987, 1.5140191014981923, 1.4451633384044815, 1.5960897493282407, 1.3839043278040342])
depths_L = np.array([0.14134778504781279, 0.09609268459501757, 0.08474244740726074, 0.08791604455888226, 0.07466250079913408, 0.09367503514109227, 0.08408902862561873])
Integrals_L = np.array([315.96506745770233, 185.40850610962727, 147.4672420361638, 177.16446346119326, 144.01002180021283, 199.0461624030094, 180.33726164011625])

Positions_R = np.array([4.725086543515459, 4.394541357613401, 4.2364897416288585, 2.81893708407405, 2.298519811390192, 1.1812107499482307])
FWHMs_R = np.array([1.1838914467490615, 1.3823888247525606, 1.5238625097412755, 2.076502223592464, -0.9009803226309857, 0.8130191708109877])
depths_R = np.array([0.10456087485627645, 0.10366384883769002, 0.05177501342732609, 0.03464504658736384, 0.013903498891809862, 0.031582718497652665])
Integrals_R = np.array([165.55274936983977, 191.2354127061444, 105.25746089095004, 93.89036756608076, 16.754666853487777, 41.35572587328143])



# print("U: ", len(distances_L), len(Positions_U), len(FWHMs_U), len(depths_U), len(Integrals_U))
# print("D: ",len(distances_D), len(Positions_D), len(FWHMs_D), len(depths_D), len(Integrals_D))

print("L: ",len(distances_L), len(Positions_L), len(FWHMs_L), len(depths_L), len(Integrals_L))
print("R: ",len(distances_R), len(Positions_R), len(FWHMs_R), len(depths_R), len(Integrals_R))

def fit_parabola(x_data,y_data,degree):
    coefficients = np.polyfit(x_data, y_data, degree)
    parabola = np.poly1d(coefficients)

    x = np.linspace(min(x_data), max(x_data), 100)
    return x,parabola

# Fit a parabola to distances
# coefficients = np.polyfit(distances_U, As_U, 2)
# # print(coefficients)
# parabola = np.poly1d(coefficients)

# # Generate x values for the parabola
# x = np.linspace(min(distances), max(distances), 100)

x_U, parabola_U = fit_parabola(distances_U, Positions_U, 2)
x_D, parabola_D = fit_parabola(distances_D, Positions_D, 2)
x_L, parabola_L = fit_parabola(distances_L, Positions_L, 2)
x_R, parabola_R = fit_parabola(distances_R, Positions_R, 2)

# plt.plot(distances_U, Positions_U, 'bo')
# plt.plot(x_U, parabola_U(x_U), 'r-', label='Parabola Fit')

# plt.plot(distances_D, Positions_D, 'go')
# plt.plot(x_D, parabola_D(x_D), 'r-', label='Parabola Fit')

plt.plot(distances_L, Positions_L, 'bo')
plt.plot(x_L, parabola_L(x_L), 'r-', label='Parabola Fit')

plt.plot(distances_R, Positions_R, 'go')
plt.plot(x_R, parabola_R(x_R), 'r-', label='Parabola Fit')

plt.ylabel('Dip Position (nm)')
plt.title('Dip Position vs Distance')
plt.xlabel('Distance (nm)')

# plt.plot(distances_U, FWHMs_U, 'bo')
# plt.plot(distances_D, FWHMs_D, 'go')

# plt.plot(distances_L, FWHMs_L, 'bo')
# plt.plot(distances_R, FWHMs_R, 'go')

# plt.ylabel('Dip FWHM (nm)')
# plt.title('Dip FWHM vs Distance')
# plt.xlabel('Distance (nm)')

# plt.plot(distances_U, depths_U, 'bo')
# plt.plot(distances_D, depths_D, 'go')

# plt.plot(distances_L, depths_L, 'bo')
# plt.plot(distances_R, depths_R, 'go')

# plt.ylabel('Dip Depth (nm)')
# plt.title('Dip Depth vs Distance')
# plt.xlabel('Distance (nm)')

# plt.plot(distances_U, Integrals_U, 'bo')
# plt.plot(distances_D, Integrals_D, 'go')

# plt.plot(distances_L, Positions_L, 'bo')
# plt.plot(distances_R, Positions_R, 'go')

# plt.ylabel('Dip Integral (nm)')
# plt.title('Dip Integral vs Distance')
# plt.xlabel('Distance (nm)')


plt.tight_layout()
plt.show()
